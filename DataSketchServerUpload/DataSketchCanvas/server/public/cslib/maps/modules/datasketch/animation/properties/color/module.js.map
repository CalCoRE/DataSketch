{"version":3,"file":"../../../../../../modules/datasketch/animation/properties/color/module.js","sources":["modules/datasketch/animation/properties/color/module.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,iBAAA,GAAoB,OAAA,CAAQ,gBAAR;IACpB,eAAA,GAAkB,OAAA,CAAQ,oBAAR;IAClB,KAAA,GAAQ,OAAA,CAAQ,iBAAR;WAEF;;;MACS,uBAAA;;;QACX,+CACE;UAAA,EAAA,EAAI,OAAJ;UACA,IAAA,EAAM,OADN;SADF;MADW;;8BAKb,kBAAA,GAAoB,SAAA;eAClB,IAAI;MADc;;8BAGpB,gBAAA,GAAkB,SAAC,MAAD,EAAS,WAAT,EAAsB,OAAtB;AAChB,YAAA;QAAA,KAAA,GAAQ;QACR,QAAA,GAAW,KAAK,CAAC,IAAN,CAAW,WAAW,CAAC,GAAvB;QACX,QAAA,GAAW,KAAK,CAAC,IAAN,CAAW,WAAW,CAAC,GAAvB;QACX,GAAA,GACE;UAAA,GAAA,EAAK,QAAA,CAAS,QAAS,CAAA,CAAA,CAAlB,EAAsB,EAAtB,CAAL;UACA,GAAA,EAAK,QAAA,CAAS,QAAS,CAAA,CAAA,CAAlB,EAAsB,EAAtB,CADL;;QAEF,KAAA,GACE;UAAA,GAAA,EAAK,QAAA,CAAS,QAAS,CAAA,CAAA,CAAlB,EAAsB,EAAtB,CAAL;UACA,GAAA,EAAK,QAAA,CAAS,QAAS,CAAA,CAAA,CAAlB,EAAsB,EAAtB,CADL;;QAEF,IAAA,GACE;UAAA,GAAA,EAAK,QAAA,CAAS,QAAS,CAAA,CAAA,CAAlB,EAAsB,EAAtB,CAAL;UACA,GAAA,EAAK,QAAA,CAAS,QAAS,CAAA,CAAA,CAAlB,EAAsB,EAAtB,CADL;;QAGF,MAAA,GAAS,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,GAAJ,GAAU,OAAA,GAAU,CAAC,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,GAAf,CAA/B,CAAmD,CAAC,QAApD,CAA6D,EAA7D,CAAd,EAAgF,CAAhF;QACT,QAAA,GAAW,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,GAAN,GAAY,OAAA,GAAU,CAAC,KAAK,CAAC,GAAN,GAAY,KAAK,CAAC,GAAnB,CAAjC,CAAyD,CAAC,QAA1D,CAAmE,EAAnE,CAAd,EAAsF,CAAtF;QACX,OAAA,GAAU,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,GAAW,OAAA,GAAU,CAAC,IAAI,CAAC,GAAL,GAAW,IAAI,CAAC,GAAjB,CAAhC,CAAsD,CAAC,QAAvD,CAAgE,EAAhE,CAAd,EAAmF,CAAnF;eAEV,MAAM,CAAC,cAAP,CAAsB,GAAA,GAAI,MAAJ,GAAa,QAAb,GAAwB,OAA9C;MAlBgB;;;;OATQ;EALvB,CAAP;AAAA","sourcesContent":["define (require) ->\n  AnimationProperty = require '../base/module'\n  CalibrationForm = require './calibration/form'\n  Utils = require 'core/util/utils'\n\n  class ColorProperty extends AnimationProperty\n    constructor: () ->\n      super\n        id: 'color'\n        name: 'Color'\n\n    getCalibrationForm: () =>\n      new CalibrationForm\n\n    setPropertyValue: (object, calibration, percent) =>\n      hexre = /^\\#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i\n      minSplit = hexre.exec calibration.min\n      maxSplit = hexre.exec calibration.max\n      red =\n        min: parseInt minSplit[1], 16\n        max: parseInt maxSplit[1], 16\n      green =\n        min: parseInt minSplit[2], 16\n        max: parseInt maxSplit[2], 16\n      blue =\n        min: parseInt minSplit[3], 16\n        max: parseInt maxSplit[3], 16\n\n      redVal = Utils.zeropad(Math.round(red.min + percent * (red.max - red.min)).toString(16), 2)\n      greenVal = Utils.zeropad(Math.round(green.min + percent * (green.max - green.min)).toString(16), 2)\n      blueVal = Utils.zeropad(Math.round(blue.min + percent * (blue.max - blue.min)).toString(16), 2)\n      \n      object.setStrokeColor \"##{redVal}#{greenVal}#{blueVal}\"\n"]}
{"version":3,"file":"../../../../../modules/datasketch/tools/objectoverlay/tool.js","sources":["modules/datasketch/tools/objectoverlay/tool.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,IAAA,GAAO,OAAA,CAAQ,2BAAR;IACP,OAAA,GAAU,OAAA,CAAQ,oBAAR;IACV,IAAA,GAAO,OAAA,CAAQ,QAAR;IACP,OAAA,CAAQ,kBAAR;IAGA,aAAA,GAAgB,OAAA,CAAQ,2CAAR;WAEV;;;MACS,0BAAA;;;QACX,kDACE;UAAA,SAAA,EAAW,IAAX;UACA,SAAA,EACE;YAAA,EAAA,EAAI,eAAJ;YACA,OAAA,EAAS,gBADT;WAFF;SADF;MADW;;iCAOb,cAAA,GAAgB,SAAA;AACd,YAAA;QAAA,IAAG,MAAM,CAAC,eAAP,KAA0B,mBAA7B;UACE,IAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAA7C,GAAsD,CAAzD;mBACG,CAAA,CAAE,qBAAF,CAAwB,CAAC,KAAzB,CAA+B;cAAC,QAAA,EAAS,KAAV;aAA/B,EADH;WAAA,MAAA;mBAGG,KAAA,CAAM,oDAAN,EAHH;WADF;SAAA,MAAA;UAME,CAAA,CAAE,qBAAF,CAAwB,CAAC,KAAzB,CAA+B,MAA/B;UAEA,aAAA,CAAc,aAAA,GAAc,IAAI,aAAJ,CAAkB,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAlB,EAAwC,MAAM,CAAC,eAA/C,CAA5B;iBACA,aAAa,CAAC,OAAd,CAAA,EATF;;MADc;;iCAYhB,eAAA,GAAiB,SAAC,GAAD;eACb,IAAC,CAAA,mBAAD,CAAqB,GAAG,CAAC,IAAI,CAAC,IAAT,KAAiB,IAAC,CAAA,WAAvC;MADa;;;;OApBY;EAT1B,CAAP;AAAA","sourcesContent":["#File for generating action on click of mark center mechanism\ndefine (require) ->\n  Tool = require 'modules/toolkit/tool/tool'\n  Globals = require 'core/model/globals'\n  View = require './view'\n  require 'link!./style.css'\n\n  #Include action files for performing different operations.\n  ObjectOverlay = require 'modules/datasketch/actions/object_overlay'\n\n  class MarkAsOriginTool extends Tool\n    constructor: () ->\n      super\n        viewClass: View\n        modelData:\n          id: \"objectoverlay\"\n          tooltip: \"Object Overlay\"\n\n    generateAction: () =>     \n      if window.currentActionId == \"toolObjectOverlay\"\n        if Globals.get('Canvas')._view._fabric._objects.length > 0\n           $('#ObjectOverlayModal').modal({backdrop:false})\n        else\n           alert(\"Please select atleast one object for this feature.\")\n      else\n        $('#ObjectOverlayModal').modal('hide')\n        \n        ObjectOverlay objectoverlay=new ObjectOverlay Globals.get('Canvas'),window.currentActionId\n        objectoverlay.execute()\n\n    _onCanvasChange: (evt) =>\n        @toggleActiveDisplay evt.data.mode == @_targetMode"]}
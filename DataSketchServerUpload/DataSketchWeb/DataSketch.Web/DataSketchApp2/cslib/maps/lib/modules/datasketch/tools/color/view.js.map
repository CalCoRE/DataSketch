{"version":3,"file":"../../../../../../lib/modules/datasketch/tools/color/view.js","sources":["lib/modules/datasketch/tools/color/view.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,QAAA,GAAW,OAAA,CAAQ,2BAAR;IACX,QAAA,GAAW,OAAA,CAAQ,kBAAR;IACX,OAAA,CAAQ,kBAAR;WAEM;;;MACS,uBAAC,KAAD;;;QACX,+CAAM,KAAN,EAAa,QAAb;MADW;;8BAGb,OAAA,GAAS,SAAC,KAAD;AACP,YAAA;QAAA,4CAAA,SAAA;QACA,IAAG,KAAK,CAAC,GAAN,CAAU,IAAV,CAAA,KAAmB,cAAtB;UACG,OAAA,GAAU,SADb;SAAA,MAAA;UAGG,OAAA,GAAU,OAHb;;QAKA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,OAAV,CAAmB,CAAA,CAAA,CAAE,CAAC,EAAtB,GAA2B;QAC3B,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,UAAV,CAAsB,CAAA,CAAA,CAAE,CAAC,SAAzB,GAAqC;QACrC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,UAAV,CAAsB,CAAA,CAAA,CAAE,CAAC,KAAzB,GAAiC;QACjC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,QAAV,CAAmB,CAAC,IAApB,CAAyB,OAAzB,EAAkC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,QAAV,CAAmB,CAAC,IAApB,CAAyB,OAAzB,CAAiC,CAAC,OAAlC,CAA0C,YAA1C,EAAwD,OAAxD,CAAlC;QACA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,eAAV,CAA0B,CAAC,GAA3B,CACE;UAAA,kBAAA,EAAoB,KAAK,CAAC,GAAN,CAAU,OAAV,CAApB;SADF;eAEC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,OAAV,CAAkB,CAAC,EAAnB,CAAsB,QAAtB,EAAgC,CAAA,SAAA,KAAA;iBAAA,SAAC,GAAD;YAC9B,KAAK,CAAC,GAAN,CAAU,OAAV,EAAkB,GAAA,GAAI,GAAG,CAAC,MAAM,CAAC,KAAjC;mBACA,KAAC,CAAA,aAAD,CAAe,4BAAf,EAA6C,EAA7C;UAF8B;QAAA,CAAA,CAAA,CAAA,IAAA,CAAhC;MAbM;;8BAiBT,cAAA,GAAgB,SAAC,EAAD,EAAK,KAAL;QACd,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,GAAA,GAAI,EAAd,CAAiB,CAAC,IAAlB,CAAA,CAAyB,CAAA,CAAA,CAAE,CAAC,SAA5B,GAAwC;QACxC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,GAAA,GAAI,EAAd,CAAiB,CAAC,IAAlB,CAAA,CAAyB,CAAA,CAAA,CAAE,CAAC,KAA5B,GAAoC;QACpC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,GAAA,GAAI,EAAd,CAAiB,CAAC,IAAlB,CAAA,CAAwB,CAAC,IAAzB,CAA8B,OAA9B,EAAuC,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,GAAA,GAAI,EAAd,CAAiB,CAAC,IAAlB,CAAA,CAAwB,CAAC,IAAzB,CAA8B,OAA9B,CAAsC,CAAC,OAAvC,CAA+C,YAA/C,EAA6D,KAA7D,CAAvC;eACA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,GAAA,GAAI,EAAd,CAAiB,CAAC,MAAlB,CAAA,CAA0B,CAAC,GAA3B,CACE;UAAA,kBAAA,EAAoB,KAApB;SADF;MAJc;;;;OArBU;EALvB,CAAP;AAAA","sourcesContent":["define (require) ->\n  ToolView = require 'modules/toolkit/tool/view'\n  Template = require 'text!./view.html'\n  require 'link!./style.css'\n\n  class ColorToolView extends ToolView\n    constructor: (model) ->\n      super model, Template\n\n    _render: (model) =>\n      super      \n      if model.get('id') == \"color-stroke\"\n         colorId = \"Stroke\"\n      else\n         colorId = \"Fill\"\n            \n      @$el.find('input')[0].id = colorId\n      @$el.find('.jscolor')[0].innerText = colorId\n      @$el.find('.jscolor')[0].value = colorId\n      @$el.find('button').attr('class', @$el.find('button').attr('class').replace('valueInput', colorId)) \n      @$el.find('.palette-well').css\n        \"background-color\": model.get('color')\n       @$el.find('input').on 'change' ,(evt) =>         \n         model.set('color',\"##{evt.target.value}\")         \n         @dispatchEvent 'Tool.GenerateActionRequest', {}\n\n    setPickerColor: (id, color) =>      \n      @$el.find('#'+id).next()[0].innerText = color\n      @$el.find('#'+id).next()[0].value = color\n      @$el.find('#'+id).next().attr('class', @$el.find('#'+id).next().attr('class').replace('valueInput', color)) \n      @$el.find('#'+id).parent().css\n        \"background-color\": color"]}
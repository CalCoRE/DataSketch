{"version":3,"file":"../../../../../../lib/modules/datasketch/tools/color/tool.js","sources":["lib/modules/datasketch/tools/color/tool.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,IAAA,GAAO,OAAA,CAAQ,2BAAR;IACP,WAAA,GAAc,OAAA,CAAQ,sCAAR;IACd,OAAA,GAAU,OAAA,CAAQ,oBAAR;IACV,IAAA,GAAO,OAAA,CAAQ,QAAR;IAEP,OAAA,CAAQ,kBAAR;WAEM;;;MACS,mBAAC,GAAD,EAAM,KAAN;AACX,YAAA;QADY,IAAC,CAAA,MAAD;;;QACZ,2CACE;UAAA,SAAA,EAAW,IAAX;UACA,SAAA,EACE;YAAA,EAAA,EAAI,QAAA,GAAS,IAAC,CAAA,GAAd;YACA,KAAA,EAAO,EAAA,GAAG,KADV;WAFF;SADF;QAMA,IAAG,IAAC,CAAA,GAAD,KAAQ,QAAX;UACE,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAqB,CAAC,gBAAtB,CAAuC,0BAAvC,EAAmE,IAAC,CAAA,eAApE,EADF;SAAA,MAAA;UAGE,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAqB,CAAC,gBAAtB,CAAuC,wBAAvC,EAAiE,IAAC,CAAA,eAAlE,EAHF;;QAKA,IAAG,EAAA,GAAK,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAqB,CAAC,cAAtB,CAAA,CAAR;UACE,IAAC,CAAA,mBAAD,CAAqB,EAAA,KAAM,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,CAA3B,EADF;SAAA,MAAA;UAGE,IAAC,CAAA,mBAAD,CAAqB,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,CAAA,KAAwB,SAA7C,EAHF;;MAZW;;0BAiBb,cAAA,GAAgB,SAAA;eACd,IAAI,WAAJ,CAAgB,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAhB,EAAuC,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,EAAqB,IAAC,CAAA,GAAtB,CAAvC;MADc;;0BAGhB,eAAA,GAAiB,SAAC,GAAD;QACf,IAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,aAAnC;UACI,IAAG,IAAC,CAAA,GAAD,KAAQ,QAAX;YACG,IAAC,CAAA,MAAD,GAAU,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC;YACxD,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,EAAoB,IAAC,CAAA,MAArB,EAFH;WAAA,MAAA;YAIE,IAAC,CAAA,MAAD,GAAU,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC;YACxD,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,EAAoB,IAAC,CAAA,MAArB,EALF;;iBAMA,IAAC,CAAA,mBAAD,CAAqB,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,CAAA,KAAwB,IAAC,CAAA,MAA9C,EAPJ;;MADe;;;;OArBK;EARnB,CAAP;AAAA","sourcesContent":["define (require) ->\n  Tool = require 'modules/toolkit/tool/tool'\n  ColorAction = require 'modules/datasketch/actions/set_color'\n  Globals = require 'core/model/globals'\n  View = require './view'\n\n  require 'link!./style.css'\n\n  class ColorTool extends Tool\n    constructor: (@_id,color) ->\n      super        \n        viewClass: View\n        modelData:\n          id: \"color-#{@_id}\"\n          color: \"#{color}\"\n            \n      if @_id == \"stroke\"\n        Globals.get('Canvas').addEventListener \"Canvas.StrokeColorChange\", @_onCanvasChange\n      else\n        Globals.get('Canvas').addEventListener \"Canvas.FillColorChange\", @_onCanvasChange\n\n      if cc = Globals.get('Canvas').getStrokeColor()\n        @toggleActiveDisplay cc == @_model.get 'color'\n      else\n        @toggleActiveDisplay @_model.get('color') == \"#000000\"\n\n    generateAction: () =>      \n      new ColorAction Globals.get('Canvas'), @_model.get 'color', @_id\n\n    _onCanvasChange: (evt) =>      \n      if evt.currentTarget._view._fabric._activeObject  \n          if @_id == \"stroke\"      \n             @_color = evt.currentTarget._view._fabric._activeObject.stroke\n             @_model.set 'color',@_color\n          else        \n            @_color = evt.currentTarget._view._fabric._activeObject.fill\n            @_model.set 'color',@_color\n          @toggleActiveDisplay @_model.get('color') == @_color  "]}
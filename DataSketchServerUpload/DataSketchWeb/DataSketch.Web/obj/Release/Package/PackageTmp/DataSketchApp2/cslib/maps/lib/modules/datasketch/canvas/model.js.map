{"version":3,"file":"../../../../../lib/modules/datasketch/canvas/model.js","sources":["lib/modules/datasketch/canvas/model.coffee"],"names":[],"mappings":"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","sourcesContent":["define (require) ->\n  Model = require 'core/model/model'\n  Utils = require 'core/util/utils'\n  \n  defaults =\n    mode: 'draw'\n    strokeWidth: 1\n    strokeColor: \"#000000\"\n    fillColor: \"#000000\"\n    objects: []\n    selected: []\n    isolated: []\n    disabled: false\n    controllable: true\n\n  class DSCanvasModel extends Model\n    constructor: (config) ->\n      config.defaults = Utils.ensureDefaults config.defaults, defaults\n      super config\n\n    addObject: (object, silent=false) =>\n      if @get('isolated').length\n        @get('isolated')[0].addObject object\n      else\n        objs = @get('objects')\n        objs.push object\n        @set 'objects', objs\n\n      if !silent\n        @dispatchEvent 'Canvas.ObjectAdded',\n          object: object\n          container: @get('isolated')\n\n    addObjects: (objects, silent=false) =>\n      for obj in objects\n        @addObject obj, true\n      if !silent\n        @dispatchEvent 'Canvas.ObjectsAdded',\n          objects: objects\n          container: @get('isolated')\n\n    getActiveObjects: () =>\n      if @get('isolated').length\n        @get('isolated')[0].getObjects()\n      else\n        @get 'objects'\n\n    removeObject: (object, silent=false) =>\n      if @get('isolated').length\n        @get('isolated')[0].removeObject object\n      else\n        objs = @get('objects')\n        if object in objs\n          objs.splice objs.indexOf(object), 1\n          @set 'objects', objs\n\n      if !silent\n        @dispatchEvent 'Canvas.ObjectRemoved',\n          object: object\n          container: @get('isolated')\n\n    removeObjects: (objects, silent=false) =>\n      for obj in objects\n        @removeObject obj, true\n      if !silent\n        @dispatchEvent 'Canvas.ObjectsRemoved',\n          objects: objects\n          container: @get('isolated')\n\n    removeSelected: () =>\n      @removeObjects @get('selected')\n      @set 'selected', []\n\n    isolate: (group) =>\n      isolated = @get('isolated')\n      if group?\n        group.isolate()\n      else if isolated.length\n        isolated[0].reform()\n      isoGroups = (grp.getObjects() for grp in @get('isolated'))\n      isoGroups.push @get('objects')\n      collection = if !group? then isoGroups[1] else isoGroups[0]\n      for obj in collection when obj != group\n        if group?\n          obj.disable()\n        else\n          obj.enable()\n      if group?\n        @get('isolated').unshift group\n      else\n        @get('isolated').shift()\n      @set 'isolated', @get('isolated')\n\n    disable: () =>\n      for obj in @getActiveObjects()\n        obj.disable()\n      @set 'disabled', true\n\n    enable: () =>\n      for obj in @getActiveObjects()\n        obj.enable()\n      @set 'disabled', false\n\n\n    disableControls: () =>\n      for obj in @getActiveObjects()\n        obj.disableControls()\n      @set 'controllable', true\n\n    enableControls: () =>\n      for obj in @getActiveObjects()\n        obj.enableControls()\n      @set 'controllable', false\n"]}
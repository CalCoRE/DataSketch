{"version":3,"file":"../../../../modules/core/util/utils.js","sources":["modules/core/util/utils.coffee"],"names":[],"mappings":"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","sourcesContent":["# Utilities\n# =========\n\n# Provides generic utility functions.\n\ndefine (require) ->\n  $ = require 'jquery'\n\n  Utils = {\n    \n# `ensureDefaults(data, defaults)`\n\n# Merges `defaults` into `data` and returns the result. Neither object is\n# modified in the process.\n    \n    ensureDefaults: (data, defaults) ->\n      $.extend(true, {}, defaults, data)\n\n    \n# `validateString(string, validaiton)`\n\n# Tests a string against the provided validation. Validation can be of three\n# types:\n    \n    validateString: (string, validation) ->\n      if typeof string isnt 'string'\n        throw new Error('Object to be validated is not a string.')\n\n      switch typeof validation\n        when 'string'\n          \n# * string: basic equality is used to test the string.\n          \n          return string == validation\n        when 'function'\n          \n# * function: the function is called, with the test string passed as\n#   the only argument.\n          \n          return validation(string)\n        when 'object'\n          if validation instanceof RegExp\n# * regex: the regex test method is run on the test string.\n            return validation.test(string)\n      \n\n# If the validation is none of these, or if the test string itself is not\n# actually a string, then the validation will return `null`.\n      \n      throw new Error('Validation is not acceptable type.')\n\n    \n# `guid4()`\n\n# Generates a random uuid.\n    \n    guid4: () ->\n      'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace /[xy]/g, (c) ->\n        r = Math.floor(Math.random()*16)\n        v = if c == 'x' then r else (r & 0x3 | 0x8)\n        return v.toString(16)\n\n    \n# `guidReString()`\n\n# Returns a string for use in regular expressions to match a guid.\n# A regular expression itself is not returned, as the string may be needed\n# in conjunction with other components of a RegExp.\n    \n    guidReString: () ->\n      \"[A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}\"\n\n    \n# `slugify(str)`\n\n# Converts a string to a slug format, replacing whitespace with underscores\n# and removing any non-alphanumeric characters\n    \n    slugify: (str) ->\n      str.toLowerCase().replace(/\\s+/g, '_').replace(/[^\\w]/g, '')\n\n    \n# `promiseErrorHandler(Error e)`\n\n# Provides a uniform way of handling errors that arise from promises.\n    \n    promiseErrorHandler: (e) ->\n      console.log e.message, e.stack\n\n    promiseRequire: (paths) ->\n      if !(paths instanceof Array)\n        paths = [paths]\n      new Promise (resolve, reject) ->\n        require paths, () ->\n          resolve arguments\n        , (err) ->\n          reject err\n    \n# `posMod(x, n)`\n\n# Mathematical mod is always positive, and the value of -1 % 5 should be 4.\n# JavaScript (and most other programming languages) return a negative number\n# (in the previous example, -1 % 5 = -1). Often times, particularly when\n# cycling through an array of items, you want to use the positive mod value,\n# which this method provides.\n    \n    posMod: (x, n) ->\n      while x < 0\n        x += n\n      x % n\n\n    isEmpty: (a) ->\n      !a? or\n        (a instanceof Array and a.length == 0) or\n        ((typeof a == \"string\" or a instanceof String) and a == '')\n\n    \n# `sortValue(a, b, ascending = true)`\n\n# Provides a default numeric value for use in sort callbacks. Note that a and\n# b need to be comparable via the default `<` and `>` interpretations.\n    \n    sortValue: (a, b, ascending = true) ->\n      if !a? and !b?\n        val = 0\n      else if !a?\n        val = 1\n      else if !b?\n        val = -1\n      else\n        val = if a > b then 1 else (if a < b then -1 else 0)\n      if !ascending\n        val = val * -1\n      val\n\n# `sortValueIgnoreArticles(a, b, ascending = true)`\n\n# Provides a default numeric value for use in sort callbacks. Unlike\n# `Utils.sortValue`, this method will detect strings and will ignore initial\n# \"the\" or \"a\" in the strings, allowing for easy comparison of titles.\n    \n    sortValueIgnoreArticles: (a, b, ascending = true) ->\n      if typeof a == \"string\" or a instanceof String\n        a = a.replace(/^((the)|a)\\s+/i, \"\")\n      if typeof b == \"string\" or b instanceof String\n        b = b.replace(/^((the)|a)\\s+/i, \"\")\n      Utils.sortValue a, b, ascending\n\n    zeropad: (str, size) =>\n      s = str + \"\"\n      while s.length < size\n        s = \"0\" + s\n      s\n  }"]}
{"version":3,"file":"../../../../../../modules/datasketch/canvas/objects/path/object.js","sources":["modules/datasketch/canvas/objects/path/object.coffee"],"names":[],"mappings":"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","sourcesContent":["define (require) ->\r\n  CanvasObject = require 'modules/datasketch/canvas/objects/base/object'\r\n  Model = require './model'\r\n  View = require './view'\r\n  Globals = require 'core/model/globals'\r\n  class PathObject extends CanvasObject\r\n    constructor: (settings = {}) ->\r\n      settings.modelClass ?= Model\r\n      settings.viewClass ?= View\r\n\r\n      super settings\r\n\r\n    buildFromFabric: (fabric) =>      \r\n      @_model.parseFabric fabric\r\n      @_view.setFabric fabric, @_model\r\n      #Restrict fabric from set id of an object if an object is of a grid type.\r\n      #window.currentId for checking new generated id of an object.            \r\n      if window.currentId > @_model.get('id')\r\n         id = window.currentId + 1         \r\n      else\r\n         id = @_model.get('id')   \r\n\r\n      if window.currentId < id\r\n         window.currentId = id\r\n         @_model.set 'id', id   \r\n\r\n      if !fabric.newId && window.currentId < fabric.newId\r\n         window.currentId = fabric.newId  \r\n         @_model.set 'id', fabric.newId\r\n  \r\n      if fabric.id != \"grid\" && !fabric.newId\r\n         fabric.set 'id', id\r\n      else \r\n         fabric.set 'id', fabric.newId\r\n\r\n      if fabric.id == \"grid\"\r\n         @_model.set 'id', 'grid'     \r\n\r\n    #object cloning function for making clone of an object.\r\n    clone: (@_ObjectType) =>\r\n     #Checking the type of object we have to clone for calling clone method.\r\n      if @_view._fabric.type == \"path\"\r\n         @_view.cloneFabric(@_ObjectType)\r\n            .then (fabClone) =>\r\n               clone = PathObject.createFromFabric fabClone\r\n               clone.setTransform @getTransform()\r\n               clone\r\n      else\r\n        fabClone = @_view.cloneFabric(@_ObjectType) \r\n        clone = PathObject.createFromFabric fabClone\r\n        clone.setTransform @getTransform()\r\n        clone\r\n    \r\n\r\n    setStrokeColor: (color) =>\r\n      if Array.isArray(color)\r\n        if color[0].id == \"color-fill\"\r\n          @_model.set 'fill.color', color[1]            \r\n        else            \r\n          @_model.set 'stroke.color', color[1]\r\n      else \r\n        jsonObj = Globals.get('Canvas').getObjects()\r\n        pathObj = jsonObj.filter((data) => return data._view._fabric.id == @_model._data.id)\r\n        if pathObj[0]._view._fabric.type != \"path\"\r\n          @_model.set 'stroke.color', color\r\n          @_model.set 'fill.color', color\r\n        else\r\n          @_model.set 'stroke.color', color\r\n      \r\n    setStrokeWidth: (width) =>\r\n      @_model.set 'stroke.width', width\r\n\r\n  #Method for creating path object from fabric object.\r\n  PathObject.createFromFabric = (fabric) ->\r\n    fabric.setCoords()    \r\n    path = new PathObject\r\n    path.buildFromFabric fabric\r\n    path\r\n\r\n  PathObject"]}
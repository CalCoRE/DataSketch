@model DataSketch.Models.SetUpSchooolModel
@{
    ViewBag.Title = "Setup School";
    Layout = "~/Views/Shared/BasicLayout.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#tab-1" aria-expanded="true">School</a></li>
                    <li class=""><a data-toggle="tab" href="#tab-2" aria-expanded="false">Standard</a></li>
                    <li class=""><a data-toggle="tab" href="#tab-3" aria-expanded="false">Class</a></li>
                </ul>
                <div class="tab-content">
                    <div id="tab-1" class="tab-pane active">
                        <div class="panel-body">
                            @using (Ajax.BeginForm("SetUpSchool", "Home", null, new AjaxOptions { UpdateTargetId = "ManageSchool", HttpMethod = "POST", OnSuccess = "OnSuccess('School')", OnFailure = "OnFailureExample" }, new { @class = "form-horizontal", @id = "ManageSchool" }))
                            {                               
                                <div id="ManageSchool">
                                    @Html.AntiForgeryToken()
                                    <div class="col-lg-4 b-r">
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <label>School</label>
                                                @Html.HiddenFor(model => model.School.SchoolId, new { id = "SchoolId" })
                                                @Html.TextBoxFor(model => model.School.SchoolName, new { id = "SchoolName", @class = "form-control", @placeholder = "School name", Value = Model.School != null ? Model.School.SchoolName : string.Empty })
                                                @Html.ValidationMessageFor(model => model.School.SchoolName, null, new { @class = "redfont" })
                                            </div>
                                        </div>
                                        @Html.ValidationSummary(true)
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <button id="btnReset" style="margin-left:5px" class="btn btn-white arrow" type="reset">Reset</button>
                                                <button id="btnAddSchool" class="btn btn-primary arrow" onclick="validateForm('ManageSchool')" type="submit">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-8">
                                        <div class="table-responsive">
                                            <table id="tblSchool" class="table table-striped table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>School Name</th>
                                                        <th class="text-center">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.lstSchool != null)
                                                    {
                                                        for (int i = 0; i < Model.lstSchool.Count; i++)
                                                        {
                                                            <tr class="gradeX">
                                                                <td>
                                                                    @Html.DisplayFor(model => model.lstSchool[i].SchoolName)
                                                                </td>

                                                                <td align="center">
                                                                    @{
                                                            int Active = Model.lstSchool[i].IsActive ? 1 : 0;
                                                                    }
                                                                    <a onclick="ActiveInactiveSchool(@Model.lstSchool[i].SchoolId,@Active)"><i class='@(@Model.lstSchool[i].IsActive == true ? "fa fa-check fa-x text-navy" : "fa fa-x fa-times-circle-o text-danger")'></i></a>
                                                                    <a onclick="EditSchool(@Model.lstSchool[i].SchoolId,'@Model.lstSchool[i].SchoolName')">
                                                                        <i class="fa fa-edit text-success"></i>
                                                                    </a>
                                                                    <a onclick="DeleteSchool(@Model.lstSchool[i].SchoolId)">
                                                                        <i class="fa fa-trash text-danger"></i>
                                                                    </a>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div id="tab-2" class="tab-pane">
                        <div class="panel-body">
                            @using (Ajax.BeginForm("ManageStandard", "Home", null, new AjaxOptions { UpdateTargetId = "ManageStandard", HttpMethod = "POST", OnSuccess = "OnSuccess('Standard')", OnFailure = "OnFailure('Standard')" }, new { @class = "form-horizontal",@id="ManageStandard" }))
                            {
                                <div id="ManageStandard">
                                    @Html.AntiForgeryToken()
                                    <div class="col-lg-4 b-r">
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <label>School</label>
                                                @Html.HiddenFor(model => model.Standard.StandardId, new { id = "StandardId" })
                                                @Html.TextBoxFor(model => model.Standard.Standard, new { id = "Standard", @class = "form-control", @placeholder = "Standard", Value = Model.Standard != null ? Model.Standard.Standard : string.Empty })
                                                @Html.ValidationMessageFor(model => model.Standard.Standard, null, new { @class = "redfont" })
                                            </div>
                                        </div>
                                        @Html.ValidationSummary(true)
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <button style="margin-left:5px" class="btn btn-white arrow" type="reset">Reset</button>
                                                <button class="btn btn-primary arrow" type="submit" onclick="validateForm('ManageStandard')">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-8">
                                        <div class="table-responsive">
                                            <table id="tblStandard" class="table table-striped table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Standard</th>
                                                        <th class="text-center">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.lstStandard != null)
                                                    {
                                                        for (int i = 0; i < Model.lstStandard.Count; i++)
                                                        {
                                                            <tr class="gradeX">
                                                                <td>
                                                                    @Html.DisplayFor(model => model.lstStandard[i].Standard)
                                                                </td>
                                                                <td class="text-center">
                                                                    @{ int Active = Model.lstStandard[i].IsActive ? 1 : 0; }
                                                                    <a onclick="ActiveInactiveStandard(@Model.lstStandard[i].StandardId,@Active)"><i class='@(@Model.lstStandard[i].IsActive == true ? "fa fa-check fa-x text-navy" : "fa fa-x fa-times-circle-o text-danger")'></i></a>
                                                                    <a onclick="EditStandard(@Model.lstStandard[i].StandardId,'@Model.lstStandard[i].Standard')">
                                                                        <i class="fa fa-edit text-success"></i>
                                                                    </a>
                                                                    <a onclick="DeleteStandard(@Model.lstStandard[i].StandardId)">
                                                                        <i class="fa fa-trash text-danger"></i>
                                                                    </a>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div id="tab-3" class="tab-pane">
                        <div class="panel-body">
                            @using (Ajax.BeginForm("ManageClass", "Home", null, new AjaxOptions { UpdateTargetId = "ManageClass", HttpMethod = "POST", OnSuccess = "OnSuccess('Class')", OnFailure = "OnFailure('Class')" }, new { @class = "form-horizontal", @id = "ManageClassStandard" }))
                            {
                                <div id="ManageClass">
                                    @Html.AntiForgeryToken()
                                    @*@Html.HiddenFor(model => model.Standard.StandardId, new { id = "StandardId" })*@
                                    <div class="col-lg-4 b-r">
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <label>Standard</label>
                                                @Html.DropDownListFor(model => model.Standard.StandardId, new SelectList(Model.lstStandard, "StandardId", "Standard"), "Select Standard", new { @class = "form-control", @id = "ddlStandardClass" })
                                                @Html.ValidationMessageFor(model => model.Standard.StandardId)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <label>Class Name</label>
                                                @Html.TextBoxFor(model => model.Class.ClassName, new { @id = "txtClassName", @class = "form-control", @placeholder = "Class", Value = Model.Class != null ? Model.Class.ClassName : string.Empty, autocomplete = "off" })
                                                @Html.ValidationMessageFor(model => model.Class.ClassName, null, new { @class = "redfont" })
                                                @Html.HiddenFor(model => model.Class.ClassId, new { id = "hfClassId", @name = "hfClassId" })
                                                @Html.HiddenFor(model => model.isEditAction, new { id = "hfIsEditAction", @name = "hfIsEditAction" })
                                                @Html.HiddenFor(model => model.oldClassId, new { id = "hfOldClassId", @name = "hfOldClassId" })
                                                @Html.HiddenFor(model => model.oldStandardId, new { id = "hfOldStandardId", @name = "hfOldStandardId" })
                                            </div>
                                        </div>
                                        @Html.ValidationSummary(true)
                                        <div class="form-group">
                                            <div class="col-lg-12">
                                                <button style="margin-left:5px" class="btn btn-white arrow" type="reset">Reset</button>
                                                <button id="btnAddClass" class="btn btn-primary arrow" onclick="validateForm('ManageClassStandard')" type="submit">Submit</button>
                                            </div>
                                        </div>
                                    </div>                                   
                                    <div class="col-lg-8">
                                        <div class="table-responsive">
                                            <div class="col-lg-3" style="float:left;padding:initial;">
                                                @Html.DropDownListFor(model => model.StandardId, new SelectList(Model.lstStandard, "StandardId", "Standard"), "Select Standard", new { @class = "form-control", @id = "ddlStandardClassId", onchange = "FilterClass()" })
                                            </div>
                                            <table id="tblClass" class="table table-striped table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Class Name</th>
                                                        <th class="text-center">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.lstClass != null)
                                                    {
                                                        for (int i = 0; i < Model.lstClass.Count; i++)
                                                        {
                                                            <tr class="gradeX">
                                                                <td>
                                                                    @Html.DisplayFor(model => model.lstClass[i].ClassName)
                                                                </td>
                                                                <td class="text-center">
                                                                    @{ int Active = Model.lstClass[i].IsActive ? 1 : 0; }
                                                                    <a onclick="ActiveInactiveClass(@Model.StandardId,@Model.lstClass[i].ClassId,@Active)"><i class='@(@Model.lstClass[i].IsActive == true ? "fa fa-check fa-x text-navy" : "fa fa-x fa-times-circle-o text-danger")'></i></a>
                                                                    <a onclick="EditClass(@Model.lstClass[i].ClassId, '@Model.lstClass[i].ClassName')">
                                                                        <i class="fa fa-edit text-success"></i>
                                                                    </a>
                                                                    <a onclick="DeleteClass(@Model.StandardId,@Model.lstClass[i].ClassId)">
                                                                        <i class="fa fa-trash text-danger"></i>
                                                                    </a>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        &nbsp;
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/autocomplete")

    <script type="text/javascript">
        function validateForm()
        {
            if($("#"+txtclassname+"").valid())
            {
                showLoader()
                return true;
            }
            return false;
        }
        $(function () {
            //GetStandard();
            localStorage.clear();
            InitTypeahead("#txtClassName", "#hfClassId", "Class", "ClassId", "ClassName");
            InitDataTable('tblClass');
            InitDataTable('tblSchool');
            InitDataTable('tblStandard');
        });
        function ResetForm() {
            debugger
            $(':input', '#ManageSchool')
               .not(':button, :submit, :reset, :hidden')
               .val('')
               .removeAttr('checked')
               .removeAttr('selected');
            //$('#ManageSchool').reset()
            $(".field-validation-error").html('');
            $(".field-validation-error").removeClass("redfont");
        }
        function ClearForm() {
            $(':input', '#ManageSchool')
                .not(':button, :submit, :reset, :hidden')
                .val('')
                .removeAttr('checked')
                .removeAttr('selected');
        }
        function ActiveInactiveClass(standardId, classId, Active) {
            if (confirm("Are you sure you want to " + (Active == 1 ? "inactive" : "active") + "  class?")) {
                blockUI()
                $.ajax({
                    url: '@Url.Action("ActiveInactiveClass", "Home")',
                    type: "POST",
                    dataType: "html",
                    data: { standardId: standardId, classId: classId },
                    success: function (result) {
                        unBlockUI()
                        $('#ManageClass').html(result)
                        InitDataTable('tblClass');
                        toastr['success']("Class " + (Active == 1 ? "inactive" : "activated ") + " successfully.");
                    },
                    error: function (errormessage) {
                        console.log(errormessage);
                        unBlockUI()
                        toastr['error']("Something went wrong please try again.");
                    }
                })
            }
        }
        function DeleteClass(standardId, classId) {
            if (confirm("Are you sure you want to delete class?")) {
                blockUI()
                $.ajax({
                    url: 'DeleteClass',
                    data: "{ 'standardId': '" + standardId + "', 'classId': '" + classId + "'}",
                    dataType: "html",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        unBlockUI()
                        $('#ManageClass').html(data)
                        toastr['success']("Class deleted successfully")
                        InitDataTable('tblClass');
                    },
                    error: function (response) {
                        console.log(response.responseText);
                        unBlockUI()
                        toastr['error']("Something went wrong please try again.");
                    }
                })
            }
        }
        function InitTypeahead(controlId, hfId, forWhat, primaryKey, primaryValue) {
            $(controlId).typeahead({
                hint: true,
                highlight: true,
                minLength: 2,
                source: function (request, response) {
                    $.ajax({
                        url: 'AutoComplete',
                        data: "{ 'prefix': '" + request + "', 'forWhat': '" + forWhat + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var id = item[primaryKey];
                                var name = item[primaryValue];
                                map[name] = { id: id, name: name };
                                items.push(name);
                            });
                            response(items);
                            $(".dropdown-menu").css("height", "auto");
                        },
                        error: function (response) {
                            toastr['error']("Something went wrong please try again.");
                        },
                        failure: function (response) {
                            toastr['error']("Something went wrong please try again.");
                        }
                    });
                },
                updater: function (item) {
                    $(hfId).val(map[item].id);
                    return item;
                }
            });
        }

  

        function EditClass(classId, className) {
            $('#txtClassName').val(className);
            $('#ddlStandardClass').val($('#ddlStandardClassId').val());
            $('#hfIsEditAction').val(true);
            $('#hfOldClassId').val(classId);
            $('#hfOldStandardId').val(eval($('#ddlStandardClassId').val()));
            //InitDataTable('tblClass');
        }

        function FilterClass() {
            blockUI()
            $.ajax({
                url: 'FilterClass?id=' + $('#ddlStandardClassId').val(),
                type: "GET",
                dataType: "html",
                success: function (result) {
                    unBlockUI()
                    $('#ManageClass').html(result);
                    InitDataTable('tblClass');
                },
                error: function (errormessage) {
                    unBlockUI()
                    toastr['error']("Something went wrong please try again.");
                }
            })
        }

        function ActiveInactiveSchool(SchoolId, Active) {
            if (confirm("Are you sure you want to " + (Active == 1 ? "inactive" : "active") + "  school?")) {
                blockUI()
                $.ajax({
                    url: '@Url.Action("ActiveInactiveSchool", "Home")',
                    type: "POST",
                    dataType: "html",
                    data: { id: SchoolId },
                    success: function (result) {
                        unBlockUI()
                        $('#ManageSchool').html(result);
                        InitDataTable('tblSchool');
                        toastr['success']("School " + (Active == 1 ? "inactive" : "activated ") + " successfully.");
                    },
                    error: function (errormessage) {
                        unBlockUI()
                        toastr['error']("Something went wrong please try again.");
                    }
                })
            }
        }

        function ActiveInactiveStandard(standardId, Active) {
            if (confirm("Are you sure you want to " + (Active == 1 ? "inactive" : "active") + "  standard?")) {
                blockUI()
                $.ajax({
                    url: '@Url.Action("ActiveInactiveStandard", "Home")',
                    type: "POST",
                    dataType: "html",
                    data: { id: standardId },
                    success: function (result) {
                        unBlockUI()
                        $('#ManageStandard').html(result);
                        InitDataTable('tblStandard');
                        toastr['success']("Standard " + (Active == 1 ? "inactive" : "activated") + " successfully.");
                    },
                    error: function (errormessage) {
                        unBlockUI()
                        toastr['error']("Something went wrong please try again.");
                    }
                })
            }
        }
        function EditSchool(SchoolId, SchoolName) {
            $('#SchoolId').val(SchoolId);
            $('#SchoolName').val(SchoolName);
        }
        function EditStandard(StandardId, Standard) {
            $('#StandardId').val(StandardId);
            $('#Standard').val(Standard);
        }

        function DeleteSchool(SchoolId) {
            if (confirm("Are you sure you want to delete school?")) {
                blockUI()
                $.ajax({
                    url: '@Url.Action("DeleteSchool", "Home")',
                    type: "POST",
                    dataType: "html",
                    data: { id: SchoolId },
                    success: function (result) {
                        unBlockUI()
                        $('#ManageSchool').html(result)
                        toastr['success']("School deleted successfully.");
                        InitDataTable('tblSchool');
                    },
                    error: function (errormessage) {
                        unBlockUI()
                        toastr['error']("Something went wrong please try again.");
                    }
                })
            }
        }

        function DeleteStandard(StandardId) {
            if (confirm("Are you sure you want to delete standard?")) {
                blockUI()
                $.ajax({
                    url: '@Url.Action("DeleteStandard", "Home")',
                    type: "POST",
                    dataType: "html",
                    data: { id: StandardId },
                    success: function (result) {
                        unBlockUI()
                        $('#ManageStandard').html(result)
                        toastr['success']("Standard deleted successfully.");
                        InitDataTable('tblStandard');
                    },
                    error: function (errormessage) {
                        unBlockUI()
                        toastr['error']("Something went wrong please try again.");
                    }
                })
            }
        }
        function OnSuccess(methodName) {

            if (methodName == "Class") {
                InitTypeahead("#txtClassName", "#hfClassId", "Class", "ClassId", "ClassName");
                InitDataTable('tblClass');
            }
            else if (methodName == "School") {
                InitDataTable('tblSchool');
            }
            else if (methodName == "Standard") {
                InitDataTable('tblStandard');
            }

            $('#SchoolId').val("");
            $('#SchoolName').val("");
            $('#StandardId').val("");
            $('#Standard').val("");
            unBlockUI()
        }

        function OnFailure(methodName) {
            unBlockUI()
            toastr['error']("Something went wrong please try again.");
        }

        function OnFailureExample(data)
        {
            unBlockUI()
            toastr['error']("Something went wrong please try again.");
        }
    </script>
}
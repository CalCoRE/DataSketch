{"version":3,"file":"../../../../../modules/datasketch/data/models/datastore.js","sources":["modules/datasketch/data/models/datastore.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,KAAA,GAAQ,OAAA,CAAQ,kBAAR;IAER,GAAA,GAAM,OAAA,CAAQ,OAAR;IACN,QAAA,GAAW,OAAA,CAAQ,YAAR;IAEX,QAAA,GACE;MAAA,IAAA,EAAM,EAAN;MACA,UAAA,EAAY,EADZ;;WAGI;;;MACS,mBAAC,IAAD;;AACX,YAAA;QAAA,IAAA,GAAO;QACP,UAAA,GAAa;AAEb;AAAA,aAAA,qCAAA;;UACE,UAAU,CAAC,IAAX,CAAgB,IAAI,QAAJ,CAAa,CAAb,CAAhB;AADF;QAEA,IAAI,CAAC,UAAL,GAAkB;AAElB;AAAA,aAAA,wCAAA;;UACE,IAAI,CAAC,IAAL,CAAU,IAAI,GAAJ,CAAQ,CAAR,EAAW,IAAI,CAAC,UAAhB,CAAV;AADF;QAEA,IAAI,CAAC,IAAL,GAAY;QAEZ,2CACE;UAAA,IAAA,EAAM,IAAN;UACA,QAAA,EAAU,QADV;SADF;MAZW;;0BAgBb,SAAA,GAAW,SAAC,QAAD;AACT,YAAA;QAAA,MAAA,GACE;UAAA,GAAA,EAAK,IAAL;UACA,GAAA,EAAK,IADL;;AAEF;AAAA,aAAA,qCAAA;;;YACE,MAAM,CAAC,MAAO,GAAG,CAAC,QAAJ,CAAa,QAAQ,CAAC,KAAT,CAAA,CAAb;;;YACd,MAAM,CAAC,MAAO,GAAG,CAAC,QAAJ,CAAa,QAAQ,CAAC,KAAT,CAAA,CAAb;;UACd,MAAM,CAAC,GAAP,GAAa,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,GAAhB,EAAqB,GAAG,CAAC,QAAJ,CAAa,QAAQ,CAAC,KAAT,CAAA,CAAb,CAArB;UACb,MAAM,CAAC,GAAP,GAAa,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,GAAhB,EAAqB,GAAG,CAAC,QAAJ,CAAa,QAAQ,CAAC,KAAT,CAAA,CAAb,CAArB;AAJf;eAKA;MATS;;;;OAjBW;EAVnB,CAAP;AAAA","sourcesContent":["define (require) ->\n  Model = require 'core/model/model'\n\n  Row = require './row'\n  Property = require './property'\n\n  defaults =\n    rows: []\n    properties: []\n\n  class DataStore extends Model\n    constructor: (data) ->\n      rows = []\n      properties = []\n      \n      for p in data.properties\n        properties.push new Property p\n      data.properties = properties\n\n      for r in data.rows\n        rows.push new Row r, data.properties\n      data.rows = rows\n\n      super\n        data: data\n        defaults: defaults\n\n    getMinMax: (property) =>\n      bounds =\n        min: null\n        max: null\n      for row in @get 'rows'\n        bounds.min ?= row.getValue(property.getId())\n        bounds.max ?= row.getValue(property.getId())\n        bounds.min = Math.min bounds.min, row.getValue(property.getId())\n        bounds.max = Math.max bounds.max, row.getValue(property.getId())\n      bounds"]}
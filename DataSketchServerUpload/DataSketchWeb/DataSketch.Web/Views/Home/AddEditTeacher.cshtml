@model DataSketch.Models.TeacherMasterModel
@{
    ViewBag.Parent = "Teachers";
    Layout = "~/Views/Shared/BasicLayout.cshtml";
}
<script>    
    $(document).ready(function () {
        $("#Password").attr("placeholder", "Password");
        $("#ConfirmPassword").attr("placeholder", "ConfirmPassword");
        $('#passwordInputAddon').click(function () {
            if ($('#Password').attr('type') == 'password') {
                $("#Password").attr("type", "text");
            } else {
                $("#Password").attr("type", "password");
            }
        })
        $('#confirmPasswordInputAddon').click(function () {
            if ($('#ConfirmPassword').attr('type') == 'password') {
                $("#ConfirmPassword").attr("type", "text");
            } else {
                $("#ConfirmPassword").attr("type", "password");
            }
        })
        $('#EmailAddress').change(function () {
            $.ajax({
                url: "IsEmailExist?EmailId=" + $('#EmailAddress').val(),
                type: "GET",
                contentType: "application/json",
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        $('#EmailAddress').val("");
                        $('#EmailAddressValidation').show()
                    }
                    else {
                        $('#EmailAddressValidation').hide()
                    }
                },
                error: function (errormessage) {
                    if (errormessage.status == 200) {
                        $('#EmailAddressValidation').hide()
                    }
                }
            });
        });
        $('.lstStandard').change(function () {
            $('#lstStandardValidation').hide()
        })
    });
    function removeValidation() {
        $('#lstStandardValidation').hide()
        $('#EmailAddressValidation').hide()
    }
    function ValidateStandard() {
        $('#EmailAddressValidation').hide()
        $('#addeditTeacher').valid()

        if ($('.lstStandard:checked').length == 0) {
            $('#lstStandardValidation').show()
            return false;
        }
        $('#lstStandardValidation').hide()
        return true;
    }
    function validateForm() {

        var isValid = ValidateStandard()
        $("#addeditTeacher").valid()
        if (isValid == true) {
            if ($("#addeditTeacher").valid()) {
                showLoader()
                return true;
            }
            else {
                false
            }
        }
        else {
            return false;
        }
    }
</script>
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="wrapper wrapper-content animated fadeInRight">
                <div class="ibox-content">
                    @using (Html.BeginForm("AddEditTeacher", "Home", FormMethod.Post, new { @class = "m-t form-horizontal", role = "form", @id = "addeditTeacher" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.TeacherId)
                        <div class="form-group">
                            @Html.Label("FirstName", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @type = "text", @placeholder = "First Name" })
                                @Html.ValidationMessageFor(m => m.FirstName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("LastName", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @type = "text", @placeholder = "Last Name" })
                                @Html.ValidationMessageFor(m => m.LastName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("EmailAddress", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @id = "EmailAddress", @type = "text", @placeholder = "Email Address" })
                                <span id="EmailAddressValidation" style="color:red;float:right" hidden>Email address already taken.</span>
                                @Html.ValidationMessageFor(m => m.EmailAddress)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Password", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                <div class="input-group" data-autoclose="true">
                                    @Html.EditorFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @id = "Password" })
                                    <span id="passwordInputAddon" class="input-group-addon">
                                        <span class="fa fa-eye"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Password)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("ConfirmPassword", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                <div class="input-group" data-autoclose="true">
                                    @Html.EditorFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", @id = "ConfirmPassword" })
                                    <span id="confirmPasswordInputAddon" class="input-group-addon">
                                        <span class="fa fa-eye"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.ConfirmPassword)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("School", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                @Html.DropDownListFor(m => m.SchoolId, new SelectList(Model.lstSchool, "SchoolId", "SchoolName"), "Select School", new { @class = "form-control", @id = "SchoolId" })
                                @Html.ValidationMessageFor(m => m.SchoolId)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-2 control-label">Standard</label>
                            <div class="col-sm-6">

                                @foreach (var check in Model.lstStandard)
                                {

                                    <div class="col-md-4 checkbox checkbox-inline" style="margin-left:0px;">
                                        @if (Model.lstCheckedStandard != null)
                                        {
                                            if (Model.lstCheckedStandard.Contains(check.StandardId))
                                            {
                                                <input id="@check.StandardId" class="lstStandard" name="chklstStandard" value="@check.StandardId" type="checkbox" checked>
                                            }
                                            else
                                            {
                                                <input id="@check.StandardId" class="lstStandard" name="chklstStandard" value="@check.StandardId" type="checkbox">
                                            }

                                        }
                                        else
                                        {
                                            <input id="@check.StandardId" class="lstStandard" name="chklstStandard" value="@check.StandardId" type="checkbox">
                                        }
                                        <label for=@check.StandardId>
                                            @check.Standard
                                        </label>
                                    </div>
                                }
                                <div style="color:red;float:right;margin-top:15px" id="lstStandardValidation" hidden>One standard must be selected.</div>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <div class="col-sm-2"></div>
                            <div class="col-sm-4">
                                <button class="btn btn-primary" type="submit" onclick=" return validateForm()">Submit</button>
                                <button class="btn btn-white" onclick="CancelAction('Teachers')" type="button">Cancel</button>
                                <button class="btn btn-white" onclick="removeValidation()" type="reset">Reset</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


{"version":3,"file":"../../../../modules/datasketch/actions/mapping_assignment.js","sources":["modules/datasketch/actions/mapping_assignment.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,MAAA,GAAS,OAAA,CAAQ,uBAAR;IACT,WAAA,GAAc,OAAA,CAAQ,2CAAR;IACd,EAAA,GAAK,OAAA,CAAQ,yBAAR;WAGC;;;MACS,iCAAC,OAAD,EAAW,eAAX,EAA6B,aAA7B;QAAC,IAAC,CAAA,UAAD;QAAU,IAAC,CAAA,kBAAD;QAAkB,IAAC,CAAA,gBAAD;;;MAA7B;;wCAGb,OAAA,GAAS,SAAA;AACP,YAAA;QAAA,IAAG,0BAAH;UACK,WAAA,GAAa;UACb,IAAG,IAAC,CAAA,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAA9B,KAAoC,cAAvC;YAGE,WAAW,CAAC,GAAZ,GAAkB,IAAA,CAAK,MAAM,CAAC,qBAAP,GAA+B,GAApC;YAClB,WAAW,CAAC,GAAZ,GAAkB,IAAA,CAAK,MAAM,CAAC,qBAAP,GAA+B,GAApC,EAJpB;WAAA,MAAA;YAME,WAAW,CAAC,GAAZ,GAAkB,MAAM,CAAC;YACzB,WAAW,CAAC,GAAZ,GAAkB,MAAM,CAAC,sBAP3B;;UASA,MAAM,CAAC,cAAP,GAAwB,IAAC,CAAA;UACzB,MAAM,CAAC,YAAP,GAAsB,IAAC,CAAA;UACvB,MAAM,CAAC,WAAP,GAAqB;UAErB,IAAC,CAAA,IAAD,GAAQ,IAAI,WAAJ,CACL;YAAA,cAAA,EAAgB,IAAC,CAAA,eAAjB;YACA,YAAA,EAAc,IAAC,CAAA,aADf;YAEA,WAAA,EAAa,WAFb;WADK;iBAIR,IAAC,CAAA,OAAO,CAAC,kBAAT,CAA4B,IAAC,CAAA,IAA7B,EAnBL;SAAA,MAAA;iBAqBE,OAAO,CAAC,OAAR,CAAgB,IAAC,CAAA,OAAO,CAAC,qBAAT,CAA+B,IAAC,CAAA,eAAhC,CAAhB,EArBF;;MADO;;wCAyBT,IAAA,GAAM,SAAA;QACJ,IAAG,0BAAH;iBACE,OAAO,CAAC,OAAR,CAAgB,IAAC,CAAA,OAAO,CAAC,qBAAT,CAA+B,IAAC,CAAA,eAAhC,CAAhB,EADF;;MADI;;;;OA7B8B;EANjC,CAAP;AAAA","sourcesContent":["define (require) ->\r\n  Action = require 'modules/action/action'\r\n  PropertyMap = require 'modules/datasketch/animation/property_map'\r\n  HM = require 'core/event/hook_manager'\r\n\r\n  #Action for applying animation property to an object or group on canvas.\r\n  class MappingAssignmentAction extends Action    \r\n    constructor: (@_object, @_objectProperty, @_dataProperty) ->\r\n\r\n    #Method for applying animation on group or object of canvas.\r\n    execute: () =>\r\n      if @_dataProperty?\r\n           calibration= {}\r\n           if @_objectProperty._model._data.id == \"transparency\"\r\n             #calibration.max = if eval(window.objectPropertyMaximum / 100) == 0 then 1 else eval(window.objectPropertyMaximum / 100)\r\n             #calibration.min = if eval(window.objectPropertyMinimum / 100) == 0 then 1 else eval(window.objectPropertyMinimum / 100)\r\n             calibration.max = eval(window.objectPropertyMaximum / 100)\r\n             calibration.min = eval(window.objectPropertyMinimum / 100)\r\n           else\r\n             calibration.max = window.objectPropertyMaximum\r\n             calibration.min = window.objectPropertyMinimum\r\n\r\n           window.objectProperty = @_objectProperty\r\n           window.dataProperty = @_dataProperty\r\n           window.calibration = calibration\r\n\r\n           @_map = new PropertyMap\r\n              objectProperty: @_objectProperty\r\n              dataProperty: @_dataProperty\r\n              calibration: calibration\r\n           @_object.addPropertyMapping @_map\r\n      else        \r\n        Promise.resolve @_object.removePropertyMapping @_objectProperty\r\n    \r\n    #Method for removing animation property of object or group from canvas.\r\n    undo: () =>\r\n      if @_dataProperty?\r\n        Promise.resolve @_object.removePropertyMapping @_objectProperty\r\n      "]}
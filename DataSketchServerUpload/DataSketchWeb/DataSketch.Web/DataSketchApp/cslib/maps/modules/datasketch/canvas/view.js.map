{"version":3,"file":"../../../../modules/datasketch/canvas/view.js","sources":["modules/datasketch/canvas/view.coffee"],"names":[],"mappings":"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","sourcesContent":["define (require) -> \r\n  #Standard library\r\n  require 'link!./style.css' \r\n\r\n  #Third party library\r\n  $                       = require 'jquery'\r\n  Fabric                  = require 'thirdparty/fabric'\r\n\r\n  #Local imports\r\n  DomView                 = require 'core/view/dom_view'\r\n  Globals                 = require 'core/model/globals'\r\n  HM                      = require 'core/event/hook_manager'\r\n  Model                   = require './model'\r\n  Template                = require 'text!./view.html'\r\n  Path                    = require './objects/path/object'\r\n  Group                   = require './objects/group/object'    \r\n  PropertyMap             = require 'modules/datasketch/animation/property_map'\r\n  DataPropertyAction      = require 'modules/datasketch/data/module'\r\n  AnimationObject         = require 'modules/datasketch/animation/animator'\r\n  ObjectProperty          = require 'modules/datasketch/canvas/objects/base/object'\r\n  MappingAssignmentAction = require 'modules/datasketch/actions/mapping_assignment'\r\n\r\n  \r\n  \r\n  \r\n  class DSCanvasView extends DomView\r\n    ###*\r\n       * Funtion to initialize model class.\r\n       * @param {model} Instance of model.\r\n    ###\r\n    constructor : (model) ->\r\n      super Template\r\n      @_model = model\r\n      model.addEventListener 'Model.Change', @_onChange\r\n      model.addEventListener 'Canvas.ObjectRemoved', @_onObjectRemoved\r\n      model.addEventListener 'Canvas.ObjectAdded', @_onObjectAdded\r\n      model.addEventListener 'Canvas.ObjectsRemoved', @_onObjectsRemoved\r\n      model.addEventListener 'Canvas.ObjectsAdded', @_onObjectsAdded\r\n      model.addEventListener 'Canvas.ObjectsAdded', @_onObjectsAdded\r\n\r\n    ###*\r\n       * Funtion to create canvas and initialize the fabric js events and key press events and also for loadig sketch from local storage.\r\n       * @param {model} Instance of model.\r\n    ###\r\n    initCanvas : (model) =>\r\n      window.isViewMode = 0\r\n      @_fabric = new Fabric.Canvas @$el.find('.canvas-main')[0],renderOnAddRemove: false\r\n      @_fabric.isDrawingMode = true\r\n      @_fabric.on 'path:created', @_onPathCreated\r\n      @_fabric.on 'object:selected', @_onObjectSelected\r\n      @_fabric.on 'object:scaling', @_onObjectScaling\r\n      @_fabric.on 'object:moving', @_onObjectScaling\r\n      @_fabric.on 'object:rotating', @_onObjectScaling\r\n      @_fabric.on 'mouse:up',@_onMouseUp\r\n      @_fabric.on 'selection:created', @_onSelectionCreated\r\n      @_fabric.on 'before:selection:cleared', @_beforeSelectionCleared\r\n      @_fabric.on 'selection:cleared', @_onSelectionCleared\r\n      Globals.get('Relay').addEventListener 'Window.Resize', @updateDimensions\r\n      @updateDimensions()            \r\n      fileData = localStorage.getItem('SaveCanvasToLocal');\r\n      \r\n      if this.decodeUriComponent('id') != null && this.decodeUriComponent('sketchName') != null && this.decodeUriComponent('mode') != null\r\n        window.currentSketchMode = this.decodeUriComponent('mode')\r\n        Globals.get('Canvas').loadFromQueryString this.decodeUriComponent('id'), this.decodeUriComponent('sketchName')\r\n      if fileData != null && fileData != ''\r\n        this.loadFromJson(fileData);\r\n        localStorage.removeItem('SaveCanvasToLocal');\r\n\r\n      _this = this;\r\n      $(window).on 'keydown', (e) ->\r\n        _this.keyRemover e\r\n              \r\n    ###*\r\n       * Function for parsing query string or url.\r\n       * @param {name} query string key value.\r\n       * @param {url} url.\r\n       * @return {string} query string value.\r\n    ###\r\n    decodeUriComponent:(name,url)=>\r\n      if (!url)\r\n        url = window.location.href\r\n      name = name.replace(/[\\[\\]]/g, \"\\\\$&\")\r\n      regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\")\r\n      results = regex.exec(url)\r\n      if (!results)\r\n        return null\r\n      if (!results[2]) \r\n        return ''\r\n      return decodeURIComponent(results[2].replace(/\\+/g, \" \"))\r\n\r\n    ###*\r\n       * Function for rendering object on canvas.\r\n       * @param {model} Instance of model.\r\n    ###\r\n    render: (model) =>      \r\n      if @_fabric?\r\n        @_fabric.clear()\r\n        @_renderObjects model.get('objects'), model.get('isolated')\r\n        @_fabric.discardActiveGroup()\r\n        @_fabric.renderAll()\r\n\r\n    #Global variable instance declaration.\r\n    root = exports ? this\r\n\r\n    ###*\r\n       * Function for getting the object property from an object property array.\r\n       * @param {propertyId} id of an animation property.\r\n       * @return {Animation property} Animation property.\r\n    ###\r\n    getObjectProperty: (propertyId) =>\r\n      @_objectProperty = HM.invoke 'DataMapping.ObjectProperties', []\r\n      propertyId = propertyId.substr(0,1).toLowerCase()+propertyId.substr(1)\r\n      window.objectPropertyId = propertyId\r\n      objProperty = @_objectProperty.filter((data)=> return data.getId() == propertyId)\r\n      objProperty\r\n\r\n    ###*\r\n       * Function for removing animation property from an active object.\r\n    ###\r\n    deleteCurrentProperty: () =>\r\n      Globals.get('Canvas').getSelectedObjects()[0].removePropertyMapping root.objectProperty\r\n\r\n    ###*\r\n       * Function for getting the object animation property data.\r\n       * @param {objProperty} animation property name.\r\n    ###\r\n    getAvailableProperty: (objProperty) =>    \r\n      activeObject = Globals.get('Canvas').getSelectedObjects() \r\n      if activeObject[0].getPropertyMappings().length > 0\r\n        for obj in activeObject[0].getPropertyMappings()\r\n          if obj.objectProperty._model._data.id == objProperty\r\n            root.objectProperty = obj.objectProperty\r\n            minCalibration = obj.calibration.min\r\n            maxCalibration = obj.calibration.max\r\n            minRangeInput = $('#minRangeInput')\r\n            maxRangeInput = $('#maxRangeInput')\r\n            minInput = $('#minInput')\r\n            maxInput = $('#maxInput')\r\n\r\n            if objProperty == \"transparency\"\r\n              minInput.html(Math.round(eval(minCalibration*100)))\r\n              maxInput.html(Math.round(eval(maxCalibration*100)))\r\n              maxRangeInput.val(Math.round(eval(maxCalibration*100)))\r\n              minRangeInput.val(Math.round(eval(minCalibration*100)))\r\n              CsvProperty = obj.dataProperty._data.id\r\n              document.getElementById('csvProperty').value = CsvProperty\r\n            else if objProperty == \"color\"\r\n              colorCode = minCalibration + \"-\" + maxCalibration\r\n              document.getElementById('colorProperty').value = colorCode\r\n              CsvProperty = obj.dataProperty._data.id\r\n              document.getElementById('csvPropertyColor').value = CsvProperty\r\n            else if objProperty != \"stamping\"\r\n              minInput.html(minCalibration)\r\n              maxInput.html(maxCalibration)\r\n              maxRangeInput.val(eval(maxCalibration))\r\n              minRangeInput.val(eval(minCalibration))\r\n              CsvProperty = obj.dataProperty._data.id\r\n              document.getElementById('csvProperty').value = CsvProperty\r\n\r\n    ###*\r\n       * Function for loading sketch from json and render it on the canvas.\r\n       * @param {FileData} sketch file content.\r\n    ###    \r\n    loadFromJson: (FileData) =>\r\n      window.currentId = 0\r\n      $('#pageLoader').show();\r\n      $('#DisableBackground').show()\r\n      $(\".modeSelect-select\").click();        \r\n\r\n      try \r\n        FileData = JSON.parse(FileData)\r\n        if FileData[0] != window.csvName\r\n            alert\"CSV Mismatched!\"\r\n        else              \r\n            totalObj = JSON.parse(FileData[1]).objects.length\r\n            root.FileData = FileData[1]\r\n            root.AnimationData = FileData\r\n            @_objectProperty = HM.invoke 'DataMapping.ObjectProperties', []\r\n            @_dataProperty = HM.invoke 'DataMapping.DataProperties', []                       \r\n            DataPropertyAction dataPropertyAction = new DataPropertyAction()\r\n            \r\n            if @_dataProperty.length == 0\r\n              dataPropertyAction.initDataProperty()                 \r\n              @_dataProperty = HM.invoke 'DataMapping.DataProperties', []                \r\n            @_fabric.loadFromJSON FileData[1], @callbackFunction\r\n            for LoadedObjects in Globals.get('Canvas').getObjects()\r\n              if LoadedObjects._view._fabric.type == 'group'\r\n                 debugger\r\n                 for fabricObject in JSON.parse(FileData[1]).objects\r\n                   currentPathObject = @_model._data.objects.filter((data) => return data.getId() == fabricObject.newId)\r\n                   currentPathObject[0]._view._fabric.originX = fabricObject.originX\r\n                   currentPathObject[0]._view._fabric.originY = fabricObject.originY\r\n                   point = currentPathObject[0]._view._fabric.getPointByOrigin fabricObject.originX,fabricObject.originY\r\n                   newPoint = currentPathObject[0]._view._fabric.translateToGivenOrigin point,currentPathObject[0]._view._fabric.originX,currentPathObject[0]._view._fabric.originY,fabricObject.originX,fabricObject.originY\r\n                   currentPathObject[0].setPosition\r\n                      x: newPoint.x,\r\n                      y: newPoint.y\r\n                # currentPathObject = JSON.parse(FileData[1])._data.objects.filter((data) => return data.id == LoadedObjects.getId())\r\n            for obj in FileData\r\n              if FileData.indexOf(obj) > 1\r\n                  pathObject = pathObj = @_model._data.objects.filter((data) => return data.getId() == obj.id)\r\n                  if pathObject.length > 0\r\n                    pathObject[0]._model._data.isStamping = obj.isStamping\r\n      catch e \r\n        alert \"File is not supported or is invalid.\"               \r\n\r\n    ###*\r\n       * Function executed after load from json execution got finish and convert fabric to pathobject.\r\n    ###\r\n    callbackFunction: () =>\r\n      @_fabric.renderAll.bind(@_fabric)\r\n      root.finalGrpIds = []\r\n      root.allSingleObjects = []\r\n      root.arrGroupIds = []        \r\n      root.allObjectsGroup = []\r\n      root.allAnimationObjGrp = []        \r\n      @getAllSingleObjects(@_fabric._objects)\r\n      @getAllAnimationObjects(root.AnimationData)\r\n\r\n      for obj in root.allSingleObjects            \r\n        pathObject = Path.createFromFabric obj\r\n        pathObject._model._data.id = obj.newId\r\n        pathObject._view._fabric.id = obj.newId\r\n        @_model.addObject pathObject\r\n        root.allObjectsGroup.push pathObject\r\n      \r\n      @createAllNestedGroup()\r\n\r\n    ###*\r\n       * Function got executed after callback function and it is for creating nested group of objects.\r\n    ###\r\n    createAllNestedGroup: () =>    \r\n      for ids in root.arrGroupIds\r\n        objects = []            \r\n        for objId in ids.ids.split(',')                \r\n          pathObj = @_model._data.objects.filter((data) => return data.getId() == eval(objId))                \r\n          if pathObj.length > 0\r\n             objects.push pathObj[0]            \r\n        if objects.length == ids.ids.split(',').length\r\n          if window.currentId < ids.gid\r\n            window.currentId = ids.gid \r\n          masterObject = Globals.get('Canvas').createGroup(objects)\r\n          masterObject._model._data.id = ids.gid\r\n          masterObject._view._fabric.id = ids.gid\r\n          \r\n          masterObject.setPosition\r\n            x: ids.gleft,\r\n            y: ids.gtop\r\n          masterObject.setScale\r\n            x: ids.gscaleX,\r\n            y: ids.gscaleY\r\n          root.finalGrpIds.push ids.gid\r\n          root.allObjectsGroup.push masterObject\r\n              \r\n      if root.arrGroupIds.length > 0\r\n        for ids in root.arrGroupIds                \r\n          grpObj = root.finalGrpIds.filter((data) => return data == eval(ids.gid))\r\n          if grpObj.length == 0 \r\n            @createAllNestedGroup()\r\n            break            \r\n          if root.arrGroupIds.indexOf(ids) == root.arrGroupIds.length - 1\r\n            @render(@_model)\r\n            @applyAnimation()                   \r\n      else\r\n        @applyAnimation()            \r\n\r\n    ###*\r\n       * Function got executed after create all nested group and for applying animation to an objects.\r\n    ###\r\n    applyAnimation: ()  =>\r\n      $('#DisableBackground').hide()\r\n      $('#pageLoader').hide()\r\n      for obj in root.allAnimationObjGrp\r\n        isBreak = false            \r\n        pathObj = root.allObjectsGroup.filter((data) => return data.getId() == obj.id)            \r\n        if pathObj.length > 0\r\n          for animationItem in obj.propertyMappings\r\n            objProperty = @_objectProperty.filter((data)=> return data.getId() == animationItem.objectProperty._model._data.id)\r\n            dataProperty = @_dataProperty.filter((data)=> return data.getId() == animationItem.dataProperty._data.id)\r\n            if dataProperty.length == 0\r\n              Globals.get('Canvas').createNewFile()\r\n              alert \"CSV Mismatched!\"\r\n              isBreak = true  \r\n              break                                            \r\n            @_map = new PropertyMap\r\n              objectProperty: objProperty[0]\r\n              dataProperty: dataProperty[0]\r\n              calibration: animationItem.calibration                                    \r\n            pathObj[0].addPropertyMapping @_map\r\n          if isBreak\r\n            break\r\n      setTimeout(@disableLoader,15000);\r\n    \r\n    ###*\r\n       * Function for remove the loader and backdrop from canvas and render it.\r\n    ###\r\n    disableLoader: () =>        \r\n      $('#pageLoader').hide();\r\n      $('#DisableBackground').hide();\r\n      @render(@_model)\r\n\r\n    ###*\r\n       * Function for getting the object which are applied an animation on it.\r\n       * @param {allObjects} list of path objects.\r\n    ###\r\n    getAllAnimationObjects: (allObjects) =>\r\n      for obj in allObjects\r\n        propertyMappings = {}\r\n        if obj.propertyMappings && obj.propertyMappings.length > 0                \r\n          propertyMappings[\"id\"] = obj.id\r\n          propertyMappings[\"propertyMappings\"] = obj.propertyMappings\r\n          root.allAnimationObjGrp.push propertyMappings\r\n        if obj.children && obj.children.length > 0\r\n          @getAllAnimationObjects obj.children\r\n        if obj._model && obj._model._data.propertyMappings && obj._model._data.propertyMappings.length > 0\r\n          propertyMappings = {}                    \r\n          propertyMappings[\"id\"] = obj._model._data.id\r\n          propertyMappings[\"propertyMappings\"] = obj._model._data.propertyMappings\r\n          root.allAnimationObjGrp.push propertyMappings\r\n        if obj._model && obj._model._data.children && obj._model._data.children.length > 0\r\n          @getAllAnimationObjects obj._model._data.children\r\n\r\n    ###*\r\n       * Function for getting the single object in path object list.\r\n       * @param {allObjects} list of path objects.\r\n    ###\r\n    getAllSingleObjects: (allObjects) =>\r\n      for obj in allObjects\r\n        if obj.type == 'group'                \r\n          groupIds = {} \r\n          groupIds[\"gid\"] = obj.newId\r\n          groupIds[\"gtop\"] = obj.top\r\n          groupIds[\"gleft\"] = obj.left\r\n          groupIds[\"gscaleX\"] = obj.scaleX\r\n          groupIds[\"gscaleY\"] = obj.scaleY\r\n          ids = obj._objects.map((data) => return data.newId).join(',');               \r\n          groupIds['ids'] = ids\r\n          root.arrGroupIds.push groupIds               \r\n          @getAllSingleObjects(obj._objects)\r\n        else               \r\n          root.allSingleObjects.push obj\r\n\r\n    \r\n    ###*\r\n       * Function for binding the list of sketch according in load sketch modal.\r\n    ###\r\n    bindSketchList: () =>       \r\n      $('#FileList').html(\"\")\r\n\r\n      if window.currentUserId != null && window.currentUserId != undefined\r\n        $.get window.APIURL + '/GetAllSketchMaster?id='+window.currentUserId, \r\n          (data) ->                  \r\n            $('#FileList').append(\"FileList:\")\r\n            $('#FileList').append(\"<option value='default' selected>- Select File -</option>\")                \r\n            for SketchName in data\r\n              $('#FileList').append(\"<option value='\"+SketchName+\"'>\"+SketchName+\"</option>\")\r\n            $('#DisableBackground').hide()\r\n            $('#pageLoader').hide()\r\n            $('#LoadFileModal').modal('show');\r\n            $('.modal-backdrop').show();\r\n      else        \r\n        Globals.get('Canvas').saveCanvasToLocal Globals.get('Canvas').reloadCurrentPage\r\n\r\n    ###*\r\n       * Function for calling render all method of fabric js.\r\n    ###\r\n    dryRender: () =>\r\n      @_fabric.renderAll()\r\n\r\n    ###*\r\n       * Function for discard the active object on canvas.\r\n    ###\r\n    removeSelectionOnSave: () =>\r\n      @_fabric.discardActiveObject()\r\n    \r\n    ###*\r\n       * Function for removing the grid from canvas.\r\n    ###\r\n    removeGrid: () =>\r\n      @_fabric.discardActiveObject()\r\n      grpObject = root.Grid\r\n      \r\n      if grpObject  \r\n        pathObj = @_model._data.objects.filter((data) => return(data._view._fabric.id == grpObject.id))\r\n        for obj in pathObj           \r\n          Globals.get('Canvas').removeObject obj\r\n      @_fabric.renderAll()\r\n \r\n    #Set the default value for the grid size\r\n    root.Gridsize = 30\r\n\r\n    ###*\r\n       * Function for changing the size of grid on canvas.\r\n       * @param {@value} size of a grid.\r\n    ###\r\n    changeGridSize: (@value) =>\r\n      @removeGrid()\r\n      root.GridSize = parseInt(@value) \r\n      root.GridSize = root.GridSize + 20\r\n      window.GridSize = root.GridSize\r\n      @addGrid()\r\n    \r\n    ###*\r\n       * Function for overlay of an objects on canvas.\r\n       * @param {operation} overlay type.\r\n       * @param {object} fabric object.\r\n    ###\r\n    overlayOfAnObject:(operation,object)=>\r\n      if operation == \"SendToBack\"\r\n         @_fabric.sendToBack(object._view._fabric)\r\n      else if operation == \"SendBackwards\"\r\n         @_fabric.sendBackwards(object._view._fabric)\r\n      else if operation == \"BringToFront\"        \r\n         @_fabric.bringToFront(object._view._fabric)\r\n      else if operation == \"BringForward\"\r\n         @_fabric.bringForward(object._view._fabric)\r\n      updatedObjectArray = []\r\n      for object in Globals.get('Canvas')._view._fabric._objects\r\n          tempObject = @_model._data.objects.filter((data) => return data.getId() == object.id)\r\n          updatedObjectArray.push tempObject[0]\r\n      @_model.set 'objects', updatedObjectArray\r\n      if root.Grid != undefined\r\n         if(window.gridSize > 0)\r\n           this.addGrid(root.GridSize)\r\n           @_fabric.sendToBack(root.Grid)\r\n      @_fabric.renderAll()\r\n\r\n    ###*\r\n       * Function for adding grid on to canvas.\r\n    ###\r\n    addGrid: () =>\r\n      $(\".modeSelect-select\").click();      \r\n      separateLines = []        \r\n      for i in [0...eval((window.innerWidth/30)*2)]\r\n        a = new Fabric.Line([i * root.GridSize, 0, i * root.GridSize, eval(window.innerWidth * 2)], { stroke: '#ccc', id: \"grid\" })\r\n        separateLines.push a\r\n\r\n        b = new Fabric.Line([0, i * root.GridSize, eval(window.innerWidth * 2),i*root.GridSize], { stroke: '#ccc', id: \"grid\" })\r\n        separateLines.push b\r\n\r\n      groupLines = new Fabric.Group(separateLines);\r\n      @_fabric.add groupLines\r\n      @dispatchEvent 'Path.Created',path: groupLines    \r\n      @_fabric.sendToBack(groupLines)          \r\n      groupLines.set 'id', 'grid'            \r\n      groupLines.selectable = false\r\n      root.Grid = groupLines    \r\n      window.Grid = groupLines    \r\n      @_fabric.renderAll()     \r\n      this._model.getActiveObjects()[eval(this._model.getActiveObjects().length-1)]._model._data.id = 'grid'\r\n\r\n    ###*\r\n       * Function for adding custom shape on to canvas.\r\n       * @param {shapeId} id of a custom shape.\r\n    ###\r\n    addShape: (shapeId) =>\r\n      @_fabric.discardActiveObject()\r\n      coord = this.getRandomLeftTop();      \r\n      string=$('.tool.active')[0].title\r\n      arr = string.split(\"-\");\r\n      strokeWidth = parseInt(arr[1])\r\n      if $('#Stroke').val() != \"66CCFF\" || $('#Fill').val() != \"66CCFF\"\r\n        strokeColor='#'+$('#Stroke').val()\r\n        fillColor='#'+$('#Fill').val()\r\n      else\r\n        strokeColor = this.getRandomColor()\r\n        fillColor = this.getRandomColor()\r\n      size =100;\r\n      switch shapeId\r\n          when 1\r\n               shape = new Fabric.Circle({radius: (size / 2), left: coord.left, top: coord.top, fill: fillColor, stroke: strokeColor,strokeWidth:strokeWidth, originX: \"center\", originY: \"center\" })\r\n          when 2\r\n               shape = new Fabric.Rect({left: coord.left, top: coord.top, fill: fillColor,strokeWidth:strokeWidth, width: size, height: size, stroke: strokeColor, originX: \"center\", originY: \"center\" })\r\n          when 3\r\n               shape = new Fabric.Triangle({left: coord.left, top: coord.top, fill: fillColor,strokeWidth:strokeWidth, width: size, height: size, stroke: strokeColor, originX: \"center\", originY: \"center\" })\r\n          when 4\r\n               shape = new Fabric.Line([50, 50, 150, 50], { left: coord.left,strokeWidth:strokeWidth, top: coord.top, stroke: strokeColor, originX: \"center\", originY: \"center\" })\r\n          when 5\r\n               shape = new Fabric.Line([50, 50, 50, 150], { left: coord.left,strokeWidth:strokeWidth, top: coord.top, stroke: strokeColor, originX: \"center\", originY: \"center\" })\r\n          when 6\r\n               shape = new Fabric.IText(\"Text Here\", { left: coord.left,strokeWidth:strokeWidth, top: coord.top, stroke: \"#000\",fill:\"#000\", originX: \"center\", originY: \"center\",fontSize:21 })\r\n      \r\n      @dispatchEvent 'Path.Created', path: shape\r\n      if $('.tool.modeSelect-select.active').length == 0\r\n         $('.tool.modeSelect-select').click()\r\n      if this._fabric._objects.length > 0\r\n        this.enableDisableSaveButton \"Add\"\r\n      \r\n    \r\n    ###*\r\n       * Function for getting random top and left coords for an object.\r\n       * @return {left,top} coords of an object.\r\n    ###\r\n    getRandomLeftTop: () =>    \r\n      offset = 130;\r\n      return {\r\n          left: this.getRandomInt(0 + offset, window.innerWidth - offset),\r\n          top: this.getRandomInt(0 + offset, window.innerHeight - offset)\r\n      }\r\n    \r\n    ###*\r\n       * Function for generating randomize color code for an object.\r\n       * @return {color code} color property for an object.\r\n    ###\r\n    getRandomColor: () =>\r\n      return \"#\"+Math.random().toString(16).substr(-6);\r\n\r\n    ###*\r\n       * Function for generating random integer number.\r\n       * @param {min} offset value.\r\n       * @param {max} window coords - offset value.\r\n       * @return {random integer} random integer generated on basis of min and max.\r\n    ###    \r\n    getRandomInt: (min, max) =>\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    \r\n    ###*\r\n       * Function for changing the position of a pathobject.\r\n       * @param {left} left coord of an object.\r\n       * @param {top} top coord of an object.\r\n    ###    \r\n    setObjectPosition:(left,top)=>\r\n      activeObject = Globals.get('Canvas').getSelectedObjects()       \r\n      activeObject[\"0\"].setPosition\r\n        x: left,\r\n        y: top\r\n    \r\n    ###*\r\n       * Function for handling key events on a canvas.\r\n       * @param {e} event object of an event.\r\n    ###    \r\n    keyRemover: (e) =>  \r\n      activeObject = Globals.get('Canvas').getSelectedObjects() \r\n      if @_model._data.selected.length == 1\r\n        if activeObject.length > 0\r\n          if !($(\"#CalibrationAndManipulationModal\").data('bs.modal') || {}).isShown  \r\n              if e.keyCode >= 37 && e.keyCode <= 40  || e.keyCode == 46 \r\n                  movePixel = 5      \r\n                  objectLeftcoord = activeObject[\"0\"]._view._fabric.left\r\n                  objectTopcoord = activeObject[\"0\"]._view._fabric.top\r\n                  switch e.keyCode\r\n                      when 37\r\n                        this.setObjectPosition objectLeftcoord - movePixel,objectTopcoord\r\n                      when 38\r\n                        this.setObjectPosition objectLeftcoord,objectTopcoord - movePixel\r\n                      when 39\r\n                        this.setObjectPosition objectLeftcoord + movePixel,objectTopcoord\r\n                      when 40\r\n                        this.setObjectPosition objectLeftcoord,objectTopcoord + movePixel\r\n                      when 46\r\n                            Globals.get('Canvas').deleteObject  activeObject\r\n                  @dispatchEvent 'Selection.Scaling',\r\n                      objectIds: e.target\r\n                  activeObject[\"0\"].enforceTransform()\r\n                  this.dryRender()\r\n      else if e.keyCode == 46\r\n        Globals.get('Canvas').deleteObject  activeObject \r\n        ###@dispatchEvent 'Selection.Scaling',\r\n          objectIds: e.target\r\n        activeObject[\"0\"].enforceTransform()###\r\n        this.dryRender()\r\n\r\n    ###*\r\n       * Function for rendering objects on canvas.\r\n       * @param {objects} list of an objects.\r\n       * @param {isolation} mode.\r\n    ###    \r\n    _renderObjects: (objects, isolations) =>\r\n      for obj in objects        \r\n        @_fabric.discardActiveGroup()\r\n        if obj in isolations\r\n          @_renderObjects obj.getObjects(), isolations\r\n        else\r\n          if obj instanceof Group\r\n            @_fabric.setActiveGroup obj.view().getFabric()\r\n          obj.enforceTransform()\r\n          @_fabric.add obj.view().getFabric()        \r\n        #condition for checking is object of grid if it is then send it backwards on canvas.\r\n        if obj._view._fabric.id == \"grid\"\r\n          obj._view._fabric.sendToBack() \r\n\r\n    ###*\r\n       * Function got triggered on path created event. \r\n       * @param {evt} event object.\r\n    ###    \r\n    _onPathCreated: (evt) =>\r\n      @dispatchEvent 'Path.Created',\r\n        path: evt.path\r\n      if this._fabric._objects.length > 0\r\n         this.enableDisableSaveButton \"Add\"\r\n\r\n    ###*\r\n       * Function for show and hide the save canvas tool on canvas.\r\n       * @param {check} name of an action.\r\n    ###    \r\n    enableDisableSaveButton: (Check) =>\r\n      if Check == \"Add\"\r\n         $('.tool.SaveCanvas').show()\r\n      else if Check == \"delete\"\r\n         $('.tool.SaveCanvas').hide()\r\n\r\n    ###*\r\n       * Function got executed when the mouse up event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onMouseUp:(evt)=>\r\n     calibrationMinProperty=0;\r\n     calibrationMaxProperty=0;\r\n     if @_model._data.selected.length > 0 && @_model._data.selected.length == 1\r\n      if @_model._data.selected[0].getPropertyMappings().length > 0\r\n          objectOriginalLeft = @_model._data.selected[0]._view._fabric.originalState.left;\r\n          objectOriginalTop = @_model._data.selected[0]._view._fabric.originalState.top;\r\n          objectLeft = @_model._data.selected[0]._view._fabric.left;\r\n          objectTop = @_model._data.selected[0]._view._fabric.top;\r\n          horizontalCalibrationMin = 0;\r\n          horizontalCalibrationMax = 0;\r\n          verticalCalibrationMin = 0;\r\n          verticalCalibrationMax = 0;\r\n          for obj in @_model._data.selected[0].getPropertyMappings()\r\n            if obj.objectProperty._model._data.id == \"x\"\r\n               horizontalCalibrationMin = obj.calibration.min\r\n               horizontalCalibrationMax = obj.calibration.max\r\n            else if obj.objectProperty._model._data.id == \"y\"\r\n               verticalCalibrationMin = obj.calibration.min\r\n               verticalCalibrationMax = obj.calibration.max\r\n                  \r\n          for obj in @_model._data.selected[0].getPropertyMappings()            \r\n            calibration={}\r\n            if obj.objectProperty._model._data.id == \"x\"\r\n               if objectOriginalLeft != objectLeft\r\n                  calibration.max = objectLeft + (horizontalCalibrationMax - horizontalCalibrationMin)\r\n                  calibration.min = objectLeft\r\n                  window.objectPropertyMaximum = calibration.max\r\n                  window.objectPropertyMinimum = calibration.min\r\n                  mappingAssignmentAction=new MappingAssignmentAction @_model._data.selected[0],obj.objectProperty,@_model._data.selected[0].getPropertyMappings()[0].dataProperty\r\n                  mappingAssignmentAction.execute()\r\n            else if obj.objectProperty._model._data.id == \"y\"\r\n              if objectOriginalTop != objectTop\r\n                if  verticalCalibrationMax < verticalCalibrationMin\r\n                 calibration.min = objectTop\r\n                 calibration.max = objectTop - Math.abs(verticalCalibrationMin - verticalCalibrationMax)\r\n                if verticalCalibrationMax > verticalCalibrationMin\r\n                  calibration.max = objectTop + Math.abs(verticalCalibrationMin - verticalCalibrationMax)\r\n                  calibration.min = objectTop\r\n                 window.objectPropertyMaximum = calibration.max\r\n                 window.objectPropertyMinimum = calibration.min\r\n                 mappingAssignmentAction=new MappingAssignmentAction @_model._data.selected[0],obj.objectProperty,@_model._data.selected[0].getPropertyMappings()[0].dataProperty\r\n                 mappingAssignmentAction.execute()\r\n\r\n    ###*\r\n       * Function got executed when object scaling event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onObjectScaling: (evt) =>   \r\n      if evt.target.canvas._activeObject\r\n          @_fabricSelection = evt.target\r\n          @_fabricSelectionMetaCache =\r\n            position:\r\n              x: @_fabricSelection.left\r\n              y: @_fabricSelection.top\r\n            rotation: @_fabricSelection.angle\r\n            scale:\r\n              x: @_fabricSelection.scaleX\r\n              y: @_fabricSelection.scaleY\r\n          this.dryRender()\r\n          @_fabricSelection.on 'modified', @_onSelectionModified      \r\n          @dispatchEvent 'Selection.Scaling',objectIds: evt.target\r\n\r\n    ###*\r\n       * Function got executed when selection event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onSelectionCreated: (evt) =>\r\n      @_fabricSelection = evt.target\r\n      @_fabricSelectionMetaCache =\r\n        position:\r\n          x: @_fabricSelection.originalLeft\r\n          y: @_fabricSelection.originalTop\r\n        rotation: @_fabricSelection.angle\r\n        scale:\r\n          x: @_fabricSelection.scaleX\r\n          y: @_fabricSelection.scaleY\r\n      @_fabricSelection.on 'modified', @_onSelectionModified\r\n      @dispatchEvent 'Selection.Created',\r\n        objectIds: (obj.get('id') for obj in evt.target.getObjects())\r\n\r\n    ###*\r\n       * Function got executed when before selection event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _beforeSelectionCleared: (evt) =>\r\n      @_fabricSelection?.off 'modified', @_onSelectionModified\r\n      @_fabricSelection = null\r\n\r\n    ###*\r\n       * Function got executed when selection got modified on canvas.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onSelectionModified: (evt) =>      \r\n      if @_fabricSelection?\r\n        delta =\r\n          position:\r\n            x: @_fabricSelection.left - @_fabricSelectionMetaCache.position.x\r\n            y: @_fabricSelection.top - @_fabricSelectionMetaCache.position.y\r\n          rotation: @_fabricSelection.angle - @_fabricSelectionMetaCache.rotation\r\n          scale:\r\n            x: @_fabricSelection.scaleX - @_fabricSelectionMetaCache.scale.x\r\n            y: @_fabricSelection.scaleY - @_fabricSelectionMetaCache.scale.y\r\n        @dispatchEvent 'Selection.Modified',\r\n          delta: delta\r\n\r\n    inActiveObject:()=>\r\n     @_fabric.discardActiveObject()\r\n     Globals.get('Canvas').selectObjects []\r\n     @dispatchEvent 'Selection.Cleared', {}\r\n\r\n    selectionCleared:()=>\r\n      if window.activeObjectsId != undefined && window.activeObjectsId.length > 1\r\n       window.multiSelectedStampedObjectId = []\r\n       for object in @_fabric._objects\r\n        for obj in @_model._data.objects\r\n          if jQuery.inArray(obj.getId(), window.activeObjectsId) != -1 && obj.getId() == object.id\r\n            obj.setPosition\r\n              x: object.left,\r\n              y: object.top\r\n            this.setObjectAnimation(obj)\r\n      @dispatchEvent 'Selection.Cleared', {}\r\n\r\n    ###*\r\n       * Function got executed when on selection cleared event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onSelectionCleared: (evt) => \r\n      if $('.tool.modeSelect-animate.active').length == 0 && window.activeObjectsId != undefined && window.activeObjectsId.length > 1\r\n       window.multiSelectedStampedObjectId = []\r\n       for object in @_fabric._objects\r\n        for obj in @_model._data.objects\r\n          if jQuery.inArray(obj.getId(), window.activeObjectsId) != -1 && obj.getId() == object.id\r\n            obj.setPosition\r\n              x: object.left,\r\n              y: object.top\r\n            this.setObjectAnimation(obj)\r\n      @dispatchEvent 'Selection.Cleared', {}\r\n      \r\n\r\n    setObjectAnimation:(object)=>\r\n     debugger\r\n     calibrationMinProperty=0;\r\n     calibrationMaxProperty=0;\r\n     if object.getPropertyMappings().length > 0\r\n          objectOriginalLeft = object._view._fabric.originalState.left;\r\n          objectOriginalTop = object._view._fabric.originalState.top;\r\n          objectLeft = object._view._fabric.left;\r\n          objectTop = object._view._fabric.top;\r\n          horizontalCalibrationMin = 0;\r\n          horizontalCalibrationMax = 0;\r\n          verticalCalibrationMin = 0;\r\n          verticalCalibrationMax = 0;\r\n          for obj in object.getPropertyMappings()\r\n            if obj.objectProperty._model._data.id == \"x\"\r\n               horizontalCalibrationMin = obj.calibration.min\r\n               horizontalCalibrationMax = obj.calibration.max\r\n            else if obj.objectProperty._model._data.id == \"y\"\r\n               verticalCalibrationMin = obj.calibration.min\r\n               verticalCalibrationMax = obj.calibration.max\r\n                  \r\n          for obj in object.getPropertyMappings()            \r\n            calibration={}\r\n            if obj.objectProperty._model._data.id == \"x\"\r\n               if objectOriginalLeft != objectLeft\r\n                  calibration.max = objectLeft + (horizontalCalibrationMax - horizontalCalibrationMin)\r\n                  calibration.min = objectLeft\r\n                  window.objectPropertyMaximum = calibration.max\r\n                  window.objectPropertyMinimum = calibration.min\r\n                  mappingAssignmentAction=new MappingAssignmentAction object,obj.objectProperty,object.getPropertyMappings()[0].dataProperty\r\n                  mappingAssignmentAction.execute()\r\n            else if obj.objectProperty._model._data.id == \"y\"\r\n              if objectOriginalTop != objectTop\r\n                if  verticalCalibrationMax < verticalCalibrationMin\r\n                 calibration.min = objectTop\r\n                 calibration.max = objectTop - Math.abs(verticalCalibrationMin - verticalCalibrationMax)\r\n                if verticalCalibrationMax > verticalCalibrationMin\r\n                  calibration.max = objectTop + Math.abs(verticalCalibrationMin - verticalCalibrationMax)\r\n                  calibration.min = objectTop\r\n                 window.objectPropertyMaximum = calibration.max\r\n                 window.objectPropertyMinimum = calibration.min\r\n                 mappingAssignmentAction=new MappingAssignmentAction object,obj.objectProperty,object.getPropertyMappings()[0].dataProperty\r\n                 mappingAssignmentAction.execute()\r\n\r\n    ###*\r\n       * Function got executed when on object selected event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onObjectSelected: (evt) =>      \r\n      if group = @_fabric.getActiveGroup()\r\n        objects = group.getObjects()\r\n      else\r\n        objects = [@_fabric.getActiveObject()]\r\n      @dispatchEvent 'Selection.Created',\r\n        objectIds: (obj.get('id') for obj in objects)\r\n\r\n    ###*\r\n       * Function for changing the dimension of canvas..\r\n    ###    \r\n    updateDimensions: () =>\r\n      @_fabric.setDimensions\r\n        width: window.innerWidth\r\n        height: window.innerHeight      \r\n      Globals.get('Canvas').render()\r\n\r\n    ###*\r\n       * Function for deactive all object on canvas.\r\n    ###    \r\n    clearSelection: () =>\r\n      @_fabric.deactivateAllWithDispatch().renderAll()\r\n\r\n    ###*\r\n       * Function got executed when on change event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onChange: (evt) =>\r\n      switch evt.data.path\r\n        when \"mode\"\r\n          @_onChangeMode evt.data.value\r\n        when \"strokeWidth\"\r\n          @_fabric.freeDrawingBrush.width = evt.data.value\r\n          @_fabric.renderAll()\r\n          if !this._fabric._activeObject && !this._fabric._activeGroup\r\n             $(\".modeSelect-draw\").click();\r\n        when \"strokeColor\"\r\n          @_fabric.freeDrawingBrush.color = evt.data.value\r\n          @_fabric.renderAll()\r\n        when \"selected\"\r\n          if evt.data.value?.length == 0\r\n            @clearSelection()\r\n        when \"isolated\"\r\n          @render evt.currentTarget\r\n        when \"disabled\"\r\n          @_fabric.selection = !evt.data.value\r\n          @render evt.currentTarget\r\n\r\n    ###*\r\n       * Function for on or off the drawing mode on canvas.\r\n    ###    \r\n    _onChangeMode: (val) =>\r\n      switch val\r\n        when \"draw\"\r\n          @_fabric.discardActiveObject()\r\n          @_fabric.isDrawingMode = true\r\n        else\r\n          @_fabric.isDrawingMode = false\r\n\r\n    ###*\r\n       * Function got executed when on object removed event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onObjectRemoved: (evt) =>\r\n      @clearSelection()\r\n      this.deleteObject()\r\n\r\n    ###*\r\n       * Function got executed when on object added event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onObjectAdded: (evt) =>\r\n      if this._fabric._objects.length > 0\r\n         this.addObject()\r\n\r\n    ###*\r\n       * Function got executed when on objects removed event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onObjectsRemoved: (evt) =>\r\n      @clearSelection()\r\n      this.deleteObject()\r\n\r\n    ###*\r\n       * Function got executed when on objects added event got triggered.\r\n       * @param {evt} event object.\r\n    ###    \r\n    _onObjectsAdded: (evt) =>      \r\n      this.addObject()\r\n    \r\n    ###*\r\n       * Function for show save tool on canvas.\r\n    ###    \r\n    addObject:()=>      \r\n      if this._fabric._objects.length > 0\r\n         this.enableDisableSaveButton \"Add\"\r\n\r\n    ###*\r\n       * Function for hide save tool on canvas.\r\n    ###    \r\n    deleteObject:()=>      \r\n      if this._fabric._objects.length == 0\r\n         this.enableDisableSaveButton \"delete\""]}
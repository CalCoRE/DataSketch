{"version":3,"file":"../../../../../../lib/modules/form/fields/number/field.js","sources":["lib/modules/form/fields/number/field.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,SAAA,GAAY,OAAA,CAAQ,gCAAR;IACZ,KAAA,GAAQ,OAAA,CAAQ,SAAR;IACR,IAAA,GAAO,OAAA,CAAQ,QAAR;IACP,OAAA,GAAU,OAAA,CAAQ,oBAAR;IACV,QAAA,GAAW,OAAA,CAAQ,wCAAR;IAEL;;;MACS,qBAAC,QAAD;;UAAC,WAAW;;;;UACvB,QAAQ,CAAC,YAAa;;;UACtB,QAAQ,CAAC,aAAc;;QACvB,6CAAM,QAAN;QAEA,IAAC,CAAA,KAAK,CAAC,gBAAP,CAAwB,gCAAxB,EAA0D,IAAC,CAAA,qBAA3D;MALW;;4BAOb,qBAAA,GAAuB,SAAC,GAAD;AACrB,YAAA;QAAA,IAAG,CAAC,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,UAAZ,CAAJ;UACE,GAAA,GAAM,GAAG,CAAC,IAAI,CAAC;UACf,IAAG,gCAAA,IAAwB,GAAA,GAAM,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,KAAZ,CAAjC;YACE,GAAA,GAAM,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,KAAZ,CAAT,EAA6B,GAA7B,EADR;;UAEA,IAAG,gCAAA,IAAwB,GAAA,GAAM,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,KAAZ,CAAjC;YACE,GAAA,GAAM,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,KAAZ,CAAT,EAA6B,GAA7B,EADR;;iBAEA,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,EAAqB,GAArB,EANF;;MADqB;;;;OARC;IAiB1B,WAAW,CAAC,MAAZ,GAAqB,SAAC,IAAD;aACnB,IAAI,WAAJ,CACE;QAAA,SAAA,EAAW,IAAX;OADF;IADmB;WAIrB;EA5BK,CAAP;AAAA","sourcesContent":["define (require) ->\n  BaseField = require 'modules/form/fields/base/field'\n  Model = require './model'\n  View = require './view'\n  Globals = require 'core/model/globals'\n  Animator = require '../../../datasketch/animation/animator'\n\n  class NumberField extends BaseField\n    constructor: (settings = {}) ->\n      settings.viewClass ?= View\n      settings.modelClass ?= Model\n      super settings\n\n      @_view.addEventListener 'NumberField.RequestValueChange', @_onValueChangeRequest\n\n    _onValueChangeRequest: (evt) =>\n      if !@_model.get('disabled')\n        val = evt.data.value\n        if @_model.get('min')? and val < @_model.get('min')\n          val = Math.max @_model.get('min'), val\n        if @_model.get('max')? and val > @_model.get('max')\n          val = Math.min @_model.get('max'), val        \n        @_model.set 'value', val        \n\n  NumberField.create = (data) ->\n    new NumberField\n      modelData: data\n  \n  NumberField"]}
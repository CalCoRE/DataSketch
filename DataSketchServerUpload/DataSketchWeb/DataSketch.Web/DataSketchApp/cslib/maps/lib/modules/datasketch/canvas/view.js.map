{"version":3,"file":"../../../../../lib/modules/datasketch/canvas/view.js","sources":["lib/modules/datasketch/canvas/view.coffee"],"names":[],"mappings":"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","sourcesContent":["define (require) ->\r\n  $ = require 'jquery'\r\n  DomView = require 'core/view/dom_view'\r\n  Globals = require 'core/model/globals'\r\n  Template = require 'text!./view.html'\r\n\r\n  Group = require './objects/group/object'\r\n\r\n  Fabric = require 'thirdparty/fabric'\r\n  require 'link!./style.css'\r\n  MappingAssignmentAction = require 'modules/datasketch/actions/mapping_assignment'\r\n  class DSCanvasView extends DomView\r\n    constructor: (model) ->\r\n      super Template\r\n      model.addEventListener 'Model.Change', @_onChange\r\n      model.addEventListener 'Canvas.ObjectRemoved', @_onObjectRemoved\r\n      model.addEventListener 'Canvas.ObjectAdded', @_onObjectAdded\r\n      model.addEventListener 'Canvas.ObjectsRemoved', @_onObjectsRemoved\r\n      model.addEventListener 'Canvas.ObjectsAdded', @_onObjectsAdded\r\n\r\n    initCanvas: (model) =>\r\n      @_fabric = new Fabric.Canvas @$el.find('.canvas-main')[0]\r\n      @_fabric.isDrawingMode = true\r\n      @_fabric.on 'path:created', @_onPathCreated\r\n      @_fabric.on 'object:selected', @_onObjectSelected\r\n      #Triggered the _onObjectScaling event after modification of an object.\r\n      @_fabric.on 'object:scaling', @_onObjectScaling\r\n      @_fabric.on 'object:modified', @_onObjectModified\r\n      #Triggered the _onObjectMoving event continously on movement of an object.\r\n      @_fabric.on 'object:moving', @_onObjectScaling\r\n      @_fabric.on 'object:rotating', @_onObjectScaling\r\n      @_fabric.on 'selection:created', @_onSelectionCreated\r\n      @_fabric.on 'before:selection:cleared', @_beforeSelectionCleared\r\n      @_fabric.on 'selection:cleared', @_onSelectionCleared\r\n      Globals.get('Relay').addEventListener 'Window.Resize', @updateDimensions\r\n      @updateDimensions()\r\n      _this = this;\r\n      $(window).on 'keydown', (e) ->\r\n        _this.KeyRemover e\r\n      \r\n\r\n    #Method for rendering of an object in duplicate object mechanism\r\n    render: (model) =>\r\n      this.dryRender()      \r\n      if @_fabric?\r\n        @_fabric.clear()\r\n        @_renderObjects model.get('objects'), model.get('isolated')\r\n        @_fabric.discardActiveGroup()\r\n        @_fabric.renderAll()\r\n\r\n    root = exports ? this\r\n\r\n    \r\n    LoadObjects:()=>            \r\n        ListofObjects = localStorage.getItem(\"ObjectSave\")        \r\n        @_fabric.loadFromJSON ListofObjects, @_fabric.renderAll.bind(@_fabric)\r\n        arrObjects = []\r\n\r\n        for obj in @_fabric._objects\r\n            arrObjects.push obj\r\n        \r\n        for obj in arrObjects\r\n            if obj  \r\n              @dispatchEvent 'Path.Created', path: obj\r\n              \r\n        #new MappingAssignmentAction obj, JSON.parse(localStorage.getItem(\"Object\")), null\r\n\r\n    dryRender: () =>\r\n      @_fabric.renderAll()\r\n\r\n    #Method for remove grid from canvas.\r\n    removegrid: (@canvas,@Objects) =>\r\n      $(\".modeSelect-draw\").click();\r\n      @_fabric.discardActiveObject()\r\n      grpObject = root.Grid\r\n\r\n      while grpObject.getObjects().length > 0\r\n        for obj in grpObject.getObjects()\r\n          if obj\r\n            grpObject.remove obj\r\n      \r\n      @_fabric.renderAll()\r\n\r\n    \r\n    #Method for adding grid in canvas.\r\n    addGrid: () =>\r\n      $(\".modeSelect-select\").click();\r\n      separateLines = []        \r\n      for i in [0...this.$el[0].clientWidth/30]\r\n        a = new Fabric.Line([i * 30, 0, i * 30, this.$el[0].clientWidth], { stroke: '#ccc', id: \"grid\" })\r\n        separateLines.push a\r\n\r\n        b = new Fabric.Line([0, i * 30, this.$el[0].clientWidth, i * 30], { stroke: '#ccc', id: \"grid\" })\r\n        separateLines.push b\r\n\r\n      groupLines = new Fabric.Group(separateLines);\r\n      @_fabric.add groupLines\r\n      groupLines.set 'id', 'grid'\r\n      root.Grid = groupLines      \r\n      @dispatchEvent 'Path.Created',\r\n        path: groupLines    \r\n      groupLines.sendToBack()      \r\n      groupLines.selectable = false\r\n      @_fabric.renderAll()      \r\n\r\n    #Method for adding shape on to canvas.\r\n    addShape: (shapeId) =>\r\n        coord = this.getRandomLeftTop();\r\n        \r\n        switch shapeId\r\n            when 1\r\n                 shape = new Fabric.Circle({ id: \"circle\", radius: 50, left: coord.left, top: coord.top, fill: '#'+this.getRandomColor(), stroke: '#000', originX: \"center\", originY: \"center\" })\r\n            when 2\r\n                 shape = new Fabric.Rect({ id: \"rect\", left: coord.left, top: coord.top, fill: '#'+this.getRandomColor(), width: 50, height: 50, stroke: '#000', originX: \"center\", originY: \"center\" })\r\n            when 3\r\n                 shape = new Fabric.Triangle({ id: \"rect\", left: coord.left, top: coord.top, fill: '#'+this.getRandomColor(), width: 50, height: 50, stroke: '#000', originX: \"center\", originY: \"center\" })\r\n            when 4\r\n                 shape = new Fabric.Line([50, 50, 200, 50], { left: coord.left, top: coord.top, stroke: '#000', originX: \"center\", originY: \"center\" })\r\n            when 5\r\n                 shape = new Fabric.Line([50, 50, 50, 200], { left: coord.left, top: coord.top, stroke: '#000', originX: \"center\", originY: \"center\" })\r\n        \r\n        @dispatchEvent 'Path.Created', path: shape  \r\n        $(\".modeSelect-select\").click();\r\n    \r\n    #Method for getting random dimension for new adding object.\r\n    getRandomLeftTop: () =>        \r\n        offset = 50;\r\n        return {\r\n            left: this.getRandomInt(0 + offset, 700 - offset),\r\n            top: this.getRandomInt(0 + offset, 500 - offset)\r\n        }\r\n    \r\n    #Method for getting random color for new adding object\r\n    getRandomColor: () =>\r\n        return (\r\n          this.pad(this.getRandomInt(0, 255).toString(16), 2) +\r\n          this.pad(this.getRandomInt(0, 255).toString(16), 2) +\r\n          this.pad(this.getRandomInt(0, 255).toString(16), 2)\r\n        );    \r\n\r\n    #Method for getting random integer number for setting coords\r\n    getRandomInt: (min, max) =>\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    \r\n    #Method for getting random color code for color of an object.\r\n    pad: (str, length) =>\r\n        while str.length < length\r\n            str = '0' + str;        \r\n        return str;    \r\n    \r\n    root.ModalChecker = true\r\n   \r\n    ModalChecker:() =>\r\n         root.ModalChecker = false\r\n   \r\n    ModalClose:()=>\r\n        root.ModalChecker = true\r\n\r\n    KeyRemover: (e) =>\r\n      if root.ModalChecker\r\n          if e.keyCode >= 37 && e.keyCode <= 40  || e.keyCode == 46 \r\n             movePixel = 5      \r\n             #activeObject = if this._fabric._activeObject then this._fabric._activeObject else this._fabric._activeGroup\r\n             canvas=Globals.get('Canvas')\r\n             activeObject = canvas.getSelectedObjects() \r\n             if e.keyCode == 37 \r\n                activeObject[\"0\"].setPosition\r\n                                    x: this._fabric._activeObject.left - movePixel,\r\n                                    y: this._fabric._activeObject.top\r\n             else if e.keyCode == 38\r\n                activeObject[\"0\"].setPosition\r\n                                    x: this._fabric._activeObject.left,\r\n                                    y: this._fabric._activeObject.top - movePixel\r\n             else if e.keyCode == 39\r\n                activeObject[\"0\"].setPosition\r\n                                    x: this._fabric._activeObject.left + movePixel,\r\n                                    y: this._fabric._activeObject.top \r\n             else if e.keyCode == 40\r\n                activeObject[\"0\"].setPosition\r\n                                    x: this._fabric._activeObject.left,\r\n                                    y: this._fabric._activeObject.top + movePixel\r\n             else if e.keyCode == 46\r\n                if activeObject.length == 1\r\n                   canvas.removeObject  activeObject[\"0\"] \r\n               \r\n             this.dryRender()\r\n             @dispatchEvent 'Selection.Scaling',\r\n                  objectIds: e.target\r\n\r\n    _renderObjects: (objects, isolations) =>\r\n      for obj in objects        \r\n        @_fabric.discardActiveGroup()\r\n        if obj in isolations\r\n          @_renderObjects obj.getObjects(), isolations\r\n        else\r\n          if obj instanceof Group\r\n            @_fabric.setActiveGroup obj.view().getFabric()\r\n          obj.enforceTransform()\r\n          @_fabric.add obj.view().getFabric()        \r\n        #condition for checking is object of grid if it is then send it backwards on canvas.\r\n        if obj._view._fabric.id == \"grid\"\r\n           obj._view._fabric.sendToBack() \r\n\r\n    _onPathCreated: (evt) =>\r\n      @dispatchEvent 'Path.Created',\r\n        path: evt.path\r\n\r\n    \r\n    _onObjectScaling: (evt) =>\r\n      @_fabricSelection = evt.target\r\n      @_fabricSelectionMetaCache =\r\n        position:\r\n          x: @_fabricSelection.left\r\n          y: @_fabricSelection.top\r\n        rotation: @_fabricSelection.angle\r\n        scale:\r\n          x: @_fabricSelection.scaleX\r\n          y: @_fabricSelection.scaleY\r\n      @_fabricSelection.on 'modified', @_onSelectionModified      \r\n      @dispatchEvent 'Selection.Scaling',\r\n        objectIds: evt.target\r\n\r\n    #Function got triggered on object:modified event listening.\r\n    _onObjectModified: (evt) =>\r\n\r\n    #Function got triggered on object:moving event listening.\r\n    _onObjectMoving: (evt) =>      \r\n\r\n    _onSelectionCreated: (evt) =>\r\n      @_fabricSelection = evt.target\r\n      @_fabricSelectionMetaCache =\r\n        position:\r\n          x: @_fabricSelection.left\r\n          y: @_fabricSelection.top\r\n        rotation: @_fabricSelection.angle\r\n        scale:\r\n          x: @_fabricSelection.scaleX\r\n          y: @_fabricSelection.scaleY\r\n      @_fabricSelection.on 'modified', @_onSelectionModified\r\n      @dispatchEvent 'Selection.Created',\r\n        objectIds: (obj.get('id') for obj in evt.target.getObjects())\r\n\r\n    _beforeSelectionCleared: (evt) =>\r\n      @_fabricSelection?.off 'modified', @_onSelectionModified\r\n      @_fabricSelection = null\r\n\r\n    _onSelectionModified: (evt) =>\r\n      if @_fabricSelection?\r\n        delta =\r\n          position:\r\n            x: @_fabricSelection.left - @_fabricSelectionMetaCache.position.x\r\n            y: @_fabricSelection.top - @_fabricSelectionMetaCache.position.y\r\n          rotation: @_fabricSelection.angle - @_fabricSelectionMetaCache.rotation\r\n          scale:\r\n            x: @_fabricSelection.scaleX - @_fabricSelectionMetaCache.scale.x\r\n            y: @_fabricSelection.scaleY - @_fabricSelectionMetaCache.scale.y\r\n        @dispatchEvent 'Selection.Modified',\r\n          delta: delta\r\n\r\n    _onSelectionCleared: (evt) =>\r\n      @dispatchEvent 'Selection.Cleared', {}\r\n\r\n    _onObjectSelected: (evt) =>\r\n      if group = @_fabric.getActiveGroup()\r\n        objects = group.getObjects()\r\n      else\r\n        objects = [@_fabric.getActiveObject()]\r\n\r\n      @dispatchEvent 'Selection.Created',\r\n        objectIds: (obj.get('id') for obj in objects)\r\n\r\n    updateDimensions: () =>\r\n      @_fabric.setDimensions\r\n        width: $(window).width()\r\n        height: $(window).height()\r\n\r\n    clearSelection: () =>\r\n      @_fabric.deactivateAllWithDispatch().renderAll()\r\n\r\n    _onChange: (evt) =>\r\n      switch evt.data.path\r\n        when \"mode\"\r\n          @_onChangeMode evt.data.value\r\n        when \"strokeWidth\"\r\n          @_fabric.freeDrawingBrush.width = evt.data.value\r\n          @_fabric.renderAll()\r\n          if !this._fabric._activeObject && !this._fabric._activeGroup\r\n             $(\".modeSelect-draw\").click();\r\n        when \"strokeColor\"\r\n          @_fabric.freeDrawingBrush.color = evt.data.value\r\n          @_fabric.renderAll()\r\n        when \"selected\"\r\n          if evt.data.value?.length == 0\r\n            @clearSelection()\r\n          # else if !@_fabric.getActiveGroup()?\r\n          #   @_fabric.setActiveGroup new fabric.Group (obj.get('view') for obj in evt.data.value)\r\n        when \"isolated\"\r\n          @render evt.currentTarget\r\n        when \"disabled\"\r\n          @_fabric.selection = !evt.data.value\r\n          @render evt.currentTarget\r\n\r\n    _onChangeMode: (val) =>\r\n      switch val\r\n        when \"draw\"\r\n          @_fabric.discardActiveObject()\r\n          @_fabric.isDrawingMode = true\r\n        else\r\n          @_fabric.isDrawingMode = false\r\n\r\n    _onObjectRemoved: (evt) =>\r\n      @clearSelection()\r\n\r\n    _onObjectAdded: (evt) =>\r\n\r\n    _onObjectsRemoved: (evt) =>\r\n      @clearSelection()\r\n\r\n    _onObjectsAdded: (evt) =>\r\n"]}
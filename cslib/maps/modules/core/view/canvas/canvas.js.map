{"version":3,"sources":["modules/core/view/canvas/canvas.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,OAAA,GAAU,OAAA,CAAQ,oBAAR;IACV,IAAA,GAAO,OAAA,CAAQ,gBAAR;WAED;;;MACS,oBAAA;QACX,4CAAM,mBAAN;MADW;;;AAGb;;;;;;;2BAMA,QAAA,GAAU,SAAC,KAAD;eAGR,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAxB,CAA6B,IAA7B,EAAgC,KAAhC;MAHQ;;;AAKV;;;;2BAGA,WAAA,GAAa,SAAC,KAAD;eAGX,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAA3B,CAAgC,IAAhC,EAAmC,KAAnC;MAHW;;;;OAlBU;EAJpB,CAAP;AAAA","file":"modules/core/view/canvas/canvas.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  DomView = require 'core/view/dom_view'\n  View = require 'core/view/view'\n\n  class CanvasView extends DomView\n    constructor: () ->\n      super \"<canvas></canvas>\"\n\n    ###\n    Public API\n    ----------\n\n    `addChild(child)`\n    ###\n    addChild: (child) ->\n      # Since the dom is no longer used inside the Canvas, we bypass DomView's\n      # default child handling, but retain the base View's handling.\n      View.prototype.addChild.call @, child\n\n    ###\n    `removeChild(child)`\n    ###\n    removeChild: (child) ->\n      # Since the dom is no longer used inside the Canvas, we bypass DomView's\n      # default child handling, but retain the base View's handling.\n      View.prototype.removeChild.call @, child"]}
{"version":3,"sources":["modules/datasketch/canvas/objects/path/object.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,YAAA,GAAe,OAAA,CAAQ,+CAAR;IACf,KAAA,GAAQ,OAAA,CAAQ,SAAR;IACR,IAAA,GAAO,OAAA,CAAQ,QAAR;IAED;;;MACS,oBAAC,QAAD;;UAAC,WAAW;;;;;;;UACvB,QAAQ,CAAC,aAAc;;;UACvB,QAAQ,CAAC,YAAa;;QAEtB,4CAAM,QAAN;MAJW;;2BAMb,eAAA,GAAiB,SAAC,MAAD;QACf,IAAC,CAAA,MAAM,CAAC,WAAR,CAAoB,MAApB;QACA,IAAC,CAAA,KAAK,CAAC,SAAP,CAAiB,MAAjB,EAAyB,IAAC,CAAA,MAA1B;eACA,MAAM,CAAC,GAAP,CAAW,IAAX,EAAiB,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,IAAZ,CAAjB;MAHe;;2BAKjB,KAAA,GAAO,SAAA;eACL,IAAC,CAAA,KAAK,CAAC,WAAP,CAAA,CACE,CAAC,IADH,CACQ,CAAA,SAAA,KAAA;iBAAA,SAAC,QAAD;AACJ,gBAAA;YAAA,KAAA,GAAQ,UAAU,CAAC,gBAAX,CAA4B,QAA5B;YACR,KAAK,CAAC,YAAN,CAAmB,KAAC,CAAA,YAAD,CAAA,CAAnB;mBACA;UAHI;QAAA,CAAA,CAAA,CAAA,IAAA,CADR;MADK;;2BAOP,cAAA,GAAgB,SAAC,KAAD;eACd,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,cAAZ,EAA4B,KAA5B;MADc;;2BAGhB,cAAA,GAAgB,SAAC,KAAD;eACd,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,cAAZ,EAA4B,KAA5B;MADc;;;;OAtBO;IAyBzB,UAAU,CAAC,gBAAX,GAA8B,SAAC,MAAD;AAC5B,UAAA;MAAA,MAAM,CAAC,SAAP,CAAA;MACA,IAAA,GAAO,IAAI;MACX,IAAI,CAAC,eAAL,CAAqB,MAArB;aACA;IAJ4B;WAM9B;EApCK,CAAP;AAAA","file":"modules/datasketch/canvas/objects/path/object.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  CanvasObject = require 'modules/datasketch/canvas/objects/base/object'\n  Model = require './model'\n  View = require './view'\n  \n  class PathObject extends CanvasObject\n    constructor: (settings = {}) ->\n      settings.modelClass ?= Model\n      settings.viewClass ?= View\n\n      super settings\n\n    buildFromFabric: (fabric) =>\n      @_model.parseFabric fabric\n      @_view.setFabric fabric, @_model\n      fabric.set 'id', @_model.get('id')\n\n    clone: () =>\n      @_view.cloneFabric()\n        .then (fabClone) =>\n          clone = PathObject.createFromFabric fabClone\n          clone.setTransform @getTransform()\n          clone\n\n    setStrokeColor: (color) =>\n      @_model.set 'stroke.color', color\n\n    setStrokeWidth: (width) =>\n      @_model.set 'stroke.width', width\n\n  PathObject.createFromFabric = (fabric) ->\n    fabric.setCoords()\n    path = new PathObject\n    path.buildFromFabric fabric\n    path\n\n  PathObject"]}
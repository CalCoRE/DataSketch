{"version":3,"sources":["modules/datasketch/canvas/objects/path/view.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,gBAAA,GAAmB,OAAA,CAAQ,6CAAR;IACnB,MAAA,GAAS,OAAA,CAAQ,mBAAR;WAEH;;;MACS,kBAAC,KAAD;;;;QACX,0CAAM,KAAN;MADW;;yBAGb,SAAA,GAAW,SAAC,GAAD;AACT,YAAA;QAAA,wCAAM,GAAN;AAEA,gBAAO,GAAG,CAAC,IAAI,CAAC,IAAhB;AAAA,eACO,cADP;qDAEY,CAAE,WAAV,GAAwB,GAAG,CAAC,IAAI,CAAC;AAFrC,eAGO,cAHP;uDAIY,CAAE,MAAV,GAAmB,GAAG,CAAC,IAAI,CAAC;AAJhC;MAHS;;yBASX,WAAA,GAAa,SAAA,GAAA;;yBAEb,WAAA,GAAa,SAAA;eACP,IAAA,OAAA,CAAQ,CAAA,SAAA,KAAA;iBAAA,SAAC,OAAD,EAAU,MAAV;mBACV,KAAC,CAAA,OAAO,CAAC,KAAT,CAAe,OAAf;UADU;QAAA,CAAA,CAAA,CAAA,IAAA,CAAR;MADO;;;;OAfQ;EAJlB,CAAP;AAAA","file":"modules/datasketch/canvas/objects/path/view.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  CanvasObjectView = require 'modules/datasketch/canvas/objects/base/view'\n  Fabric = require 'thirdparty/fabric'\n\n  class PathView extends CanvasObjectView\n    constructor: (model) ->\n      super model\n\n    _onChange: (evt) =>\n      super evt\n\n      switch evt.data.path\n        when \"stroke.width\"\n          @_fabric?.strokeWidth = evt.data.value\n        when \"stroke.color\"\n          @_fabric?.stroke = evt.data.value\n\n    buildFabric: () =>\n\n    cloneFabric: () =>\n      new Promise (resolve, reject) =>\n        @_fabric.clone resolve"]}
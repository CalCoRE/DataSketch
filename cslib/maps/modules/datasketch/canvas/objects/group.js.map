{"version":3,"sources":["modules/datasketch/canvas/objects/group.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,QAAA,GAAW,OAAA,CAAQ,UAAR;IAEX,QAAA,GACE;MAAA,EAAA,EAAI,CAAJ;MACA,OAAA,EAAS,EADT;MAEA,IAAA,EAAM,IAFN;;WAII;;;MACS,eAAC,OAAD;;;;;;;QACX,QAAQ,CAAC,MAAT,IAAmB;QAEnB,uCACE;UAAA,IAAA,EACE;YAAA,EAAA,EAAI,QAAQ,CAAC,MAAb;YACA,OAAA,EAAS,OADT;WADF;UAGA,QAAA,EAAU,QAHV;SADF;MAHW;;sBASb,UAAA,GAAY,SAAA;eACV,IAAC,CAAA,GAAD,CAAK,SAAL;MADU;;sBAGZ,SAAA,GAAW,SAAC,GAAD;AACT,YAAA;QAAA,OAAA,GAAU,IAAC,CAAA,GAAD,CAAK,SAAL;QACV,OAAO,CAAC,IAAR,CAAa,GAAb;eACA,IAAC,CAAA,GAAD,CAAK,SAAL,EAAgB,OAAhB;MAHS;;sBAKX,YAAA,GAAc,SAAC,MAAD;AACZ,YAAA;QAAA,OAAA,GAAU,IAAC,CAAA,GAAD,CAAK,SAAL;QACV,IAAG,aAAU,OAAV,EAAA,MAAA,MAAH;UACE,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAf,EAAqC,CAArC,EADF;;eAEA,IAAC,CAAA,GAAD,CAAK,SAAL,EAAgB,OAAhB;MAJY;;sBAMd,cAAA,GAAgB,SAAC,KAAD;AACd,YAAA;AAAA;AAAA;aAAA,qCAAA;;uBACE,GAAG,CAAC,cAAJ,CAAmB,KAAnB;AADF;;MADc;;sBAIhB,cAAA,GAAgB,SAAC,KAAD;AACd,YAAA;AAAA;AAAA;aAAA,qCAAA;;uBACE,GAAG,CAAC,cAAJ,CAAmB,KAAnB;AADF;;MADc;;sBAIhB,KAAA,GAAO,SAAA;AACL,YAAA;QAAA,OAAO,CAAC,GAAR;;AAAa;AAAA;eAAA,qCAAA;;yBAAA,GAAG,CAAC,KAAJ,CAAA;AAAA;;qBAAb;eAGA;MAJK;;;;OAhCW;EARf,CAAP;AAAA","file":"modules/datasketch/canvas/objects/group.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  DSObject = require './object'\n\n  defaults =\n    id: 0\n    objects: []\n    view: null\n\n  class Group extends DSObject\n    constructor: (objects) ->\n      DSObject._count += 1\n      \n      super\n        data:\n          id: DSObject._count\n          objects: objects\n        defaults: defaults\n\n    getObjects: () =>\n      @get 'objects'\n\n    addObject: (obj) =>\n      objects = @get 'objects'\n      objects.push obj\n      @set 'objects', objects\n\n    removeObject: (object) =>\n      objects = @get 'objects'\n      if object in objects\n        objects.splice objects.indexOf(obj), 1\n      @set 'objects', objects\n\n    setStrokeWidth: (width) =>\n      for obj in @get('objects')\n        obj.setStrokeWidth width\n\n    setStrokeColor: (color) =>\n      for obj in @get('objects')\n        obj.setStrokeColor color\n\n    clone: () =>\n      Promise.all (obj.clone() for obj in @getObjects())\n        # .then (subclones) ->\n        #   new Group subclones\n      null\n"]}
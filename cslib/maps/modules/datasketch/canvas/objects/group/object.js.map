{"version":3,"sources":["modules/datasketch/canvas/objects/group/object.coffee"],"names":[],"mappings":"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","file":"modules/datasketch/canvas/objects/group/object.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  CanvasObject = require 'modules/datasketch/canvas/objects/base/object'\n  Model = require './model'\n  View = require './view'\n  Matrix = require 'core/util/matrix'\n\n  class GroupObject extends CanvasObject\n    constructor: (settings) ->\n      settings.modelClass ?= Model\n      settings.viewClass ?= View\n\n      super settings\n      for child in @_model.get 'children'\n        child.disableControls()\n      @_calculatePosition()\n      @_view.buildFabric @_model\n\n    _calculatePosition: () =>\n      dims = []\n      for obj in @_model.get 'children'\n        obj.enforceTransform()\n        objDims = obj.getBounds()\n        dims.push\n          left: objDims.left\n          right: objDims.right\n          top: objDims.top\n          bottom: objDims.bottom\n      bounds = null\n      for dim in dims\n        bounds ?= dim\n        bounds.left = Math.min(bounds.left, dim.left)\n        bounds.right = Math.max(bounds.right, dim.right)\n        bounds.top = Math.min(bounds.top, dim.top)\n        bounds.bottom = Math.max(bounds.bottom, dim.bottom)\n\n      position =\n        x: (bounds.left + bounds.right) / 2\n        y: (bounds.top + bounds.bottom) / 2\n      @setPosition position\n\n      groupTrans = @getTransform()\n      for obj in @_model.get 'children'\n        trans = obj.getTransform()\n        obj.setTransform Matrix.multiplyTransformMatrices Matrix.invert(groupTrans), trans\n        obj.enforceTransform()\n\n    getObjects: () =>\n      @_model.get('children')\n\n    addObject: (obj) =>\n      children = @_model.get(\"children\")\n      children.push obj\n      if !@_model.get 'isolated'\n        obj.disableControls()\n      @_model.set('children', children)\n\n    removeObject: (obj) =>\n      children = @_model.get(\"children\")\n      if obj in children\n        children = children.splice children.indexOf(obj), 1\n        @_model.set('children', children)\n\n    break: () =>\n      children = @_model.get 'children'\n      groupTrans = @getTransform()\n      for obj in children\n        currTrans = obj.getTransform()\n        obj.setTransform Matrix.multiplyTransformMatrices groupTrans, currTrans\n        obj.enableControls()\n      @_model.set 'children', []\n      children\n\n    enforceTransform: () =>\n      for child in @_model.get('children')\n        child.enforceTransform()\n      super()\n\n    isolate: () =>\n      children = @_model.get 'children'\n      groupTrans = @getTransform()\n      for obj in children\n        currTrans = obj.getTransform()\n        obj.setTransform Matrix.multiplyTransformMatrices groupTrans, currTrans\n        obj.enableControls()\n      @_model.set 'isolated', true\n\n    reform: () =>\n      for child in @_model.get 'children'\n        child.disableControls()\n      @_calculatePosition()\n      @_view.buildFabric @_model\n      @_model.set 'isolated', false\n\n    clone: () =>\n      Promise.all (child.clone() for child in @_model.get('children'))\n        .then (childClones) =>\n          clone = GroupObject.createFromObjects childClones\n          clone.setTransform @getTransform()\n          clone\n\n    disable: () =>\n      for child in @_model.get 'children'\n        child.disable()\n      super()\n\n    enable: () =>\n      for child in @_model.get 'children'\n        child.enable()\n      super()\n\n    enableControls: () =>\n      for child in @_model.get 'children'\n        child.enableControls()\n      super()\n\n    disableControls: () =>\n      for child in @_model.get 'children'\n        child.disableControls()\n      super()\n\n    setStrokeColor: (color) =>\n      for child in @_model.get 'children'\n        child.setStrokeColor color\n\n    setStrokeWidth: (width) =>\n      for child in @_model.get 'children'\n        child.setStrokeWidth width\n\n    animate: (playhead, timeDelta, datastore) =>\n      for child in @_model.get('children')\n        child.animate playhead, timeDelta, datastore\n      super playhead, timeDelta, datastore\n\n  GroupObject.createFromObjects = (objects) ->\n    group = new GroupObject\n      modelData:\n        children: objects\n    group\n\n  GroupObject"]}
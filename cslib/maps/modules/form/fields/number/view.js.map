{"version":3,"sources":["modules/form/fields/number/view.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,aAAA,GAAgB,OAAA,CAAQ,+BAAR;IAChB,QAAA,GAAW,OAAA,CAAQ,yBAAR;WAEL;;;MACS,yBAAC,KAAD,EAAQ,IAAR;;;;QACX,iDAAM,KAAN,EAAgB,YAAH,GAAc,IAAd,GAAwB,QAArC;QAEA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,eAAV,CAA0B,CAAC,IAA3B,CAAgC,KAAK,CAAC,GAAN,CAAU,QAAV,CAAhC;QACA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,gBAAV,CAA2B,CAAC,IAA5B,CAAiC,KAAK,CAAC,GAAN,CAAU,SAAV,CAAjC;QACA,IAAG,wBAAH;UACE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,IAA/B,CAAoC,KAApC,EAA2C,KAAK,CAAC,GAAN,CAAU,KAAV,CAA3C,EADF;;QAEA,IAAG,wBAAH;UACE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,IAA/B,CAAoC,KAApC,EAA2C,KAAK,CAAC,GAAN,CAAU,KAAV,CAA3C,EADF;;QAGA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,EAA/B,CAAkC,QAAlC,EAA4C,IAAC,CAAA,cAA7C;MAVW;;gCAYb,OAAA,GAAS,SAAA;eACP,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,IAA/B,CAAoC,UAApC,EAAgD,IAAhD;MADO;;gCAGT,MAAA,GAAQ,SAAA;eACN,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,IAA/B,CAAoC,UAApC,EAAgD,KAAhD;MADM;;gCAGR,cAAA,GAAgB,SAAC,KAAD;eACd,IAAC,CAAA,aAAD,CAAe,gCAAf,EACE;UAAA,KAAA,EAAO,UAAA,CAAW,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,GAA/B,CAAA,CAAX,CAAP;SADF;MADc;;;;OAnBY;EAJzB,CAAP;AAAA","file":"modules/form/fields/number/view.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  BaseFieldView = require 'modules/form/fields/base/view'\n  Template = require 'text!./numberfield.html'\n\n  class NumberFieldView extends BaseFieldView\n    constructor: (model, tmpl) ->\n      super model, if tmpl? then tmpl else Template\n\n      @$el.find(\".field-prefix\").html model.get('prefix')\n      @$el.find(\".field-postfix\").html model.get('postfix')\n      if model.get('min')?\n        @$el.find(\"input.numberfield\").attr \"min\", model.get('min')\n      if model.get('max')?\n        @$el.find(\"input.numberfield\").attr \"max\", model.get('max')\n\n      @$el.find(\"input.numberfield\").on 'change', @_onFieldChange\n\n    disable: () =>\n      @$el.find('input.numberfield').prop 'disabled', true\n\n    enable: () =>\n      @$el.find('input.numberfield').prop 'disabled', false\n\n    _onFieldChange: (jqevt) =>\n      @dispatchEvent 'NumberField.RequestValueChange',\n        value: parseFloat @$el.find(\"input.numberfield\").val()"]}
{"version":3,"sources":["modules/canvas/objects/rectangle/object.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,YAAA,GAAe,OAAA,CAAQ,sCAAR;IACf,KAAA,GAAQ,OAAA,CAAQ,SAAR;IACR,IAAA,GAAO,OAAA,CAAQ,QAAR;IAED;;;MACS,yBAAC,MAAD;;;;;UACX,MAAM,CAAC,aAAc;;;UACrB,MAAM,CAAC,YAAa;;QACpB,iDAAM,MAAN;MAHW;;gCAKb,KAAA,GAAO,SAAC,KAAD;QACL,IAAG,aAAH;iBACE,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,EAAqB,KAArB,EADF;SAAA,MAAA;iBAGE,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,OAAZ,EAHF;;MADK;;gCAMP,MAAA,GAAQ,SAAC,MAAD;QACN,IAAG,cAAH;iBACE,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,QAAZ,EAAsB,MAAtB,EADF;SAAA,MAAA;iBAGE,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,QAAZ,EAHF;;MADM;;gCAMR,OAAA,GAAS,SAAA;AACP,YAAA;eAAA,IAAA,GACE;UAAA,CAAA,EAAG,IAAC,CAAA,CAAD,CAAA,CAAA,GAAO,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,KAAD,CAAA,CAAT,CAAA,GAAqB,CAA/B;UACA,CAAA,EAAG,IAAC,CAAA,CAAD,CAAA,CAAA,GAAO,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,MAAD,CAAA,CAAT,CAAA,GAAsB,CADhC;UAEA,KAAA,EAAO,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,KAAD,CAAA,CAAT,CAFP;UAGA,MAAA,EAAQ,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,MAAD,CAAA,CAAT,CAHR;;MAFK;;;;OAlBmB;IAyB9B,eAAe,CAAC,MAAhB,GAAyB,SAAC,IAAD;;QAAC,OAAO;;aAC3B,IAAA,eAAA,CACF;QAAA,SAAA,EAAW,IAAX;OADE;IADmB;IAIzB,eAAe,CAAC,aAAhB,GACE;MAAA,MAAA,EACE;QAAA,KAAA,EAAO,CAAP;QACA,KAAA,EAAO,SADP;OADF;MAGA,IAAA,EAAM,aAHN;MAIA,IAAA,EACE;QAAA,GAAA,EAAK,OAAL;QACA,IAAA,EAAM,OADN;OALF;;WAQF;EA3CK,CAAP;AAAA","file":"modules/canvas/objects/rectangle/object.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  VectorObject = require 'modules/canvas/objects/vector/object'\n  Model = require './model'\n  View = require './view'\n\n  class RectangleObject extends VectorObject\n    constructor: (config) ->\n      config.modelClass ?= Model\n      config.viewClass ?= View\n      super config\n\n    width: (width) =>\n      if width?\n        @_model.set 'width', width\n      else\n        @_model.get 'width'\n\n    height: (height) =>\n      if height?\n        @_model.set 'height', height\n      else\n        @_model.get 'height'\n\n    getRect: () =>\n      rect =\n        x: @x() - Math.abs(@width()) / 2\n        y: @y() - Math.abs(@height()) / 2\n        width: Math.abs(@width())\n        height: Math.abs(@height())\n\n  RectangleObject.create = (data = {}) ->\n    new RectangleObject\n      modelData: data\n\n  RectangleObject.defaultConfig =\n    stroke:\n      width: 1\n      color: \"#000000\"\n    fill: \"transparent\"\n    line:\n      cap: \"round\"\n      join: \"round\"    \n\n  RectangleObject"]}
{"version":3,"sources":["modules/canvas/objects/base/base_object.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,UAAA,GAAa,OAAA,CAAQ,4BAAR;IACb,KAAA,GAAQ,OAAA,CAAQ,SAAR;IACR,IAAA,GAAO,OAAA,CAAQ,QAAR;IACP,KAAA,GAAQ,OAAA,CAAQ,iBAAR;WAEF;;;MACS,sBAAC,MAAD;;UAAC,SAAS;;;;;;;;;UACrB,MAAM,CAAC,YAAa;;;UACpB,MAAM,CAAC,aAAc;;QACrB,8CAAM,MAAN;MAHW;;6BAKb,MAAA,GAAQ,SAAC,GAAD;eACN,IAAC,CAAA,KAAK,CAAC,MAAP,CAAc,GAAd,EAAmB,IAAC,CAAA,MAApB;MADM;;6BAGR,SAAA,GAAW,SAAC,KAAD;AACT,YAAA;QAAA,QAAA,GACE;UAAA,CAAA,EAAG,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,YAAZ,CAAA,GAA4B,KAAK,CAAC,CAArC;UACA,CAAA,EAAG,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,YAAZ,CAAA,GAA4B,KAAK,CAAC,CADrC;;eAEF,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,UAAZ,EAAwB,QAAxB;MAJS;;6BAMX,MAAA,GAAQ,SAAC,OAAD;eACN,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,UAAZ,EAAwB,KAAK,CAAC,MAAN,CAAa,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,UAAZ,CAAA,GAA0B,OAAvC,EAAgD,KAAK,CAAC,GAAtD,CAAxB;MADM;;6BAGR,KAAA,GAAO,SAAC,CAAD,EAAI,CAAJ;;UACL,IAAK;;QACL,IAAC,CAAA,MAAD,CAAQ,CAAR;eACA,IAAC,CAAA,MAAD,CAAQ,CAAR;MAHK;;6BAKP,MAAA,GAAQ,SAAC,MAAD;eACN,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,SAAZ,EAAuB,MAAvB;MADM;;6BAGR,MAAA,GAAQ,SAAC,MAAD;eACN,IAAC,CAAA,MAAM,CAAC,GAAR,CAAY,SAAZ,EAAuB,MAAvB;MADM;;;;OA1BiB;EANtB,CAAP;AAAA","file":"modules/canvas/objects/base/base_object.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  Controller = require 'core/controller/controller'\n  Model = require './model'\n  View = require './view'\n  Utils = require 'core/util/utils'\n\n  class CanvasObject extends Controller\n    constructor: (config = {}) ->\n      config.viewClass ?= View\n      config.modelClass ?= Model\n      super config\n\n    render: (ctx) =>\n      @_view.render ctx, @_model\n\n    translate: (delta) =>\n      position =\n        x: @_model.get('position.x') + delta.x\n        y: @_model.get('position.y') + delta.y\n      @_model.set 'position', position\n\n    rotate: (radians) =>\n      @_model.set 'rotation', Utils.posMod(@_model.get('rotation') + radians, Utils.TAU)\n\n    scale: (x, y) =>\n      y ?= x\n      @scaleX x\n      @scaleY y\n\n    scaleX: (factor) =>\n      @_model.set 'scale.x', factor\n\n    scaleY: (factor) =>\n      @_model.set 'scale.y', factor"]}
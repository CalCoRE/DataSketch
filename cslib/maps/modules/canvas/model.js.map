{"version":3,"sources":["modules/canvas/model.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;;;;EAAA,MAAA,CAAO,SAAC,OAAD;AACL,QAAA;IAAA,KAAA,GAAQ,OAAA,CAAQ,kBAAR;IACR,EAAA,GAAK,OAAA,CAAQ,yBAAR;IAEL,QAAA,GACE;MAAA,EAAA,EAAI,IAAJ;MACA,KAAA,EAAO,GADP;MAEA,MAAA,EAAQ,GAFR;MAGA,IAAA,EAAM,IAHN;MAIA,aAAA,EAAe,GAJf;MAKA,KAAA,EAAO,EALP;MAMA,MAAA,EACE;QAAA,IAAA,EAAM,EAAN;QACA,KAAA,EAAO,EADP;QAEA,IAAA,EAAM,EAFN;OAPF;MAUA,SAAA,EAAW,EAVX;;WAYI;;;MACS,qBAAC,IAAD;;;;;QACX,QAAQ,CAAC,KAAT,GAAiB,EAAE,CAAC,MAAH,CAAU,cAAV,EAA0B,EAA1B,EAA8B,IAA9B;QACjB,6CACE;UAAA,IAAA,EAAM,IAAN;UACA,QAAA,EAAU,QADV;SADF;MAFW;;4BAMb,SAAA,GAAW,SAAC,MAAD,EAAS,KAAT;AACT,YAAA;;UADkB,QAAQ;;QAC1B,QAAA,GAAW,IAAC,CAAA,GAAD,CAAK,SAAA,GAAU,KAAf;QACX,QAAQ,CAAC,IAAT,CAAc,MAAd;eACA,IAAC,CAAA,GAAD,CAAK,SAAA,GAAU,KAAf,EAAwB,QAAxB;MAHS;;4BAKX,YAAA,GAAc,SAAC,MAAD,EAAS,KAAT;AACZ,YAAA;;UADqB,QAAQ;;QAC7B,QAAA,GAAW,IAAC,CAAA,GAAD,CAAK,SAAA,GAAU,KAAf;QACX,IAAG,aAAU,QAAV,EAAA,MAAA,MAAH;UACE,QAAQ,CAAC,MAAT,CAAgB,QAAQ,CAAC,OAAT,CAAiB,MAAjB,CAAhB,EAA0C,CAA1C;iBACA,IAAC,CAAA,GAAD,CAAK,SAAA,GAAU,KAAf,EAAwB,QAAxB,EAFF;;MAFY;;4BAMd,cAAA,GAAgB,SAAA;eACd,IAAC,CAAA,GAAD,CAAK,QAAA,GAAQ,CAAC,IAAC,CAAA,GAAD,CAAK,MAAL,CAAD,CAAb;MADc;;4BAGhB,WAAA,GAAa,SAAC,IAAD;eACX,aAAQ,MAAM,CAAC,IAAP,CAAY,IAAC,CAAA,GAAD,CAAK,OAAL,CAAZ,CAAR,EAAA,IAAA;MADW;;;;OArBW;EAjBrB,CAAP;AAAA","file":"modules/canvas/model.js","sourceRoot":"/source/","sourcesContent":["define (require) ->\n  Model = require 'core/model/model'\n  HM = require 'core/event/hook_manager'\n\n  defaults =\n    id: null\n    width: 100\n    height: 100\n    mode: null\n    isolationFade: 0.5\n    modes: {}\n    layers:\n      meta: []\n      focus: []\n      back: []\n    selection: []\n\n  class CanvasModel extends Model\n    constructor: (data) ->\n      defaults.modes = HM.invoke \"Canvas.Modes\", {}, data\n      super\n        data: data\n        defaults: defaults\n\n    addObject: (object, layer = \"focus\") =>\n      children = @get \"layers.#{layer}\"\n      children.push object\n      @set \"layers.#{layer}\", children\n\n    removeObject: (object, layer = \"focus\") =>\n      children = @get \"layers.#{layer}\"\n      if object in children\n        children.splice children.indexOf(object), 1\n        @set \"layers.#{layer}\", children\n\n    getCurrentMode: () =>\n      @get \"modes.#{@get('mode')}\"\n\n    isValidMode: (mode) =>\n      mode in Object.keys(@get('modes'))"]}